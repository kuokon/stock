{"version":3,"file":"Models.js","sourceRoot":"","sources":["../../../src/ot/model/Models.ts"],"names":[],"mappings":"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","sourcesContent":["module MyApp {\r\n\r\n\r\n    export class Config {\r\n\r\n        public static APP_ID: string = 'stock';\r\n        public version: number = 71;\r\n        public appID: string = Config.APP_ID;\r\n\r\n        public phoneNativeClientVersion: number = 0;\r\n        public loaded: boolean = false;\r\n        public isPhone: boolean = false;\r\n        public numTryLogout: number = 0;\r\n        public currUser: User = null;\r\n\r\n        public configYear: number = null;\r\n        public configMonth: number = null;\r\n\r\n        public actualYear: number = null;\r\n        public actualMonth: number = null;\r\n\r\n        public isDev: boolean = false;\r\n\r\n        // used in header.html\r\n        public minDate: Date = new Date(\"2017-08-01\");\r\n        public maxDate: Date;\r\n\r\n\r\n        public minPaperDate: Date = new Date(\"2020-01-01\");\r\n        public maxPaperDate: Date;\r\n\r\n\r\n        public paperReportDate = null;\r\n\r\n        svr: DbService = null;\r\n        $localStorage = null;\r\n\r\n        public ItemCodeTerm: number = -1;\r\n\r\n        // public isNewTerm(): boolean {\r\n        //     return this.configYear > 2019\r\n        //         || (this.configYear == 2019 && this.configMonth >= 10);\r\n        // }\r\n        //\r\n        public startupTime: Date = new Date();\r\n\r\n        constructor(svr: DbService, $localStorage) {\r\n\r\n            let now = new Date();\r\n            this.actualYear = now.getFullYear();\r\n            this.actualMonth = now.getMonth() + 1;\r\n\r\n            this.svr = svr;\r\n            this.$localStorage = $localStorage;\r\n\r\n            this.maxDate = new Date();\r\n            this.maxDate.setMonth(this.maxDate.getMonth() + 1);\r\n\r\n\r\n            this.minPaperDate = new Date();\r\n            this.minPaperDate.setMonth(this.minPaperDate.getMonth() - 4);\r\n\r\n            this.maxPaperDate = new Date();\r\n            this.maxPaperDate.setMonth(this.maxPaperDate.getMonth() + 8);\r\n\r\n            this.getPaperReportDate();\r\n\r\n        }\r\n\r\n\r\n        public getTimeInfo(): string {\r\n            return this.getConfigYear() + '-' + this.getConfigMonth();\r\n        }\r\n\r\n        public getTimeDuration(): string {\r\n\r\n            function lifeSpan(t0: Date) {\r\n                let now = new Date();\r\n\r\n                let x = (now.getTime() - t0.getTime()), a = x, i = 0, s = 0, m = 0, h = 0, j = 0;\r\n                if (a >= 1) {\r\n                    i = a % 1000;\r\n                    a = (a - i) / 1000;\r\n                    if (a >= 1) {\r\n                        s = a % 60;\r\n                        a = (a - s) / 60;\r\n                        if (a >= 1) {\r\n                            m = a % 60;\r\n                            a = (a - m) / 60;\r\n                            if (a >= 1) {\r\n                                h = a % 24;\r\n                                a = (a - h) / 24;\r\n                                if (a >= 1) {\r\n                                    j = a;//...\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return 'Elapsed: ' + h + 'h ' + m + 'm ' + s + 's.';\r\n            }\r\n\r\n            return lifeSpan(this.startupTime)\r\n\r\n        }\r\n\r\n        public setCurrUser(user: User, passwd: string) {\r\n\r\n            this.currUser = user;\r\n\r\n            let basicAuth = user ? 'Basic ' + window.btoa(user.Id + ':' + passwd) : null;\r\n            // this.svr.api.$http.defaults.headers.common['Authorization'] = basicAuth;\r\n\r\n\r\n            let auth_key = this.appID + '-basic-auth';\r\n            let user_key = this.appID + '-user';\r\n\r\n            let userId = user ? user.Id : '';\r\n\r\n            this.$localStorage[user_key] = userId;\r\n            this.$localStorage[auth_key] = basicAuth;\r\n        }\r\n\r\n        public selectPaperReportDate(d: Date) {\r\n            this.paperReportDate = d;\r\n        }\r\n\r\n        public getPaperReportDate(): Date {\r\n            if (this.paperReportDate == null) {\r\n\r\n                let d = new Date();\r\n                d.setMonth(d.getMonth() + 1);\r\n                this.paperReportDate = d;\r\n            }\r\n\r\n            return this.paperReportDate;\r\n        }\r\n\r\n\r\n        public isConfigDateSameAsActual(): boolean {\r\n            return this.configMonth === this.actualMonth\r\n                && this.configYear === this.actualYear;\r\n        }\r\n\r\n        public getDateBackgroundColor(): string {\r\n\r\n            if (this.isConfigDateSameAsActual()) {\r\n                return ''\r\n            } else {\r\n                return 'orange';\r\n            }\r\n        }\r\n\r\n\r\n        public getMonthOptions(): number[] {\r\n            return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n        }\r\n\r\n        public getYearOptions(): number[] {\r\n            return [2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022]\r\n        }\r\n\r\n        public getActualMonth(): number {\r\n            return this.actualMonth;\r\n        }\r\n\r\n        public getActualYear(): number {\r\n            return this.actualYear;\r\n        }\r\n\r\n        public getConfigYear() {\r\n\r\n            //let _db: Db = this.$localStorage;\r\n            if (!this.configYear) {\r\n\r\n                let year_key = Config.APP_ID + '-config-year';\r\n\r\n\r\n                this.configYear = this.$localStorage[year_key];\r\n\r\n                if (Helper.isBlank(this.configYear)) {\r\n                    this.configYear = this.actualYear;\r\n                }\r\n            }\r\n            return this.configYear;\r\n\r\n        }\r\n\r\n\r\n        public getConfigMonth() {\r\n            if (!this.configMonth) {\r\n\r\n                let month_key = Config.APP_ID + '-config-month';\r\n\r\n                this.configMonth = this.$localStorage[month_key];\r\n                // if (!this.svr.getCurrUser().isInspector() || this.svr.isDev()) {\r\n                //     this.configMonth = this.$localStorage.configMonth;\r\n                // }\r\n\r\n                if (Helper.isBlank(this.configMonth)) {\r\n                    this.configMonth = this.actualMonth;\r\n                }\r\n            }\r\n            return this.configMonth;\r\n        }\r\n\r\n        public getNativeClientVersion(): number {\r\n            return this.phoneNativeClientVersion;\r\n        }\r\n\r\n        onInitNative(ver: string) {\r\n\r\n            this.phoneNativeClientVersion = parseInt(ver) || 0;\r\n            console.info('phone client version: ' + this.phoneNativeClientVersion);\r\n\r\n        }\r\n\r\n\r\n        public isVersionMatch(): boolean {\r\n\r\n            let jsVerClient = this.version;\r\n            let jsVerServer = Meta.get().getVersion();\r\n\r\n            let androidVerClient = (this.isPhone ? this.getNativeClientVersion() : 0);\r\n            let androidVerServer = Meta.get().getPhoneClientVersion();\r\n\r\n            let match = jsVerClient == jsVerServer && (androidVerClient == 0 || (androidVerClient == androidVerServer));\r\n            if (!match) {\r\n                console.info(' version mismatch : js: ' + jsVerClient + '-' + jsVerServer\r\n                    + ' | android: ' + androidVerClient + '-' + androidVerServer);\r\n            }\r\n            return match;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    export abstract class Base {\r\n\r\n        public Id = -1;\r\n        public Name;\r\n\r\n        public getKey(): string {\r\n            return null;\r\n        }\r\n\r\n\r\n        toString() {\r\n            return JSON.stringify(this, Helper.json_replacer);\r\n        }\r\n\r\n\r\n        public isNew(): boolean {\r\n            return !(this.Id >= 0);\r\n        }\r\n    }\r\n\r\n\r\n    export class User extends Base {\r\n\r\n        private static ROLE_NAME_MAP = {\r\n            INSPECTOR: \"調查員\",\r\n            OPERATOR: \"內勤\",\r\n            ADMIN: \"管理員\",\r\n        };\r\n        _dirty: boolean = false;\r\n        private outletTaskCountMap = {};\r\n\r\n        constructor(public Id: number,\r\n                    public Name: string,\r\n                    public Name_E: string,\r\n                    public Role: string,\r\n                    public Status: string) {\r\n\r\n            super();\r\n        }\r\n\r\n        public static mkModel(): ModelGen {\r\n\r\n            let str = 'User| Name:str; Role:str; Status:int; Dept:str';\r\n            return ModelGen.from(str);\r\n\r\n        }\r\n\r\n        static fromJson(svr: DbService, json): User {\r\n\r\n            return new User(json.Id, json.Name, json.Name_E, json.Role, json.Status);\r\n        }\r\n\r\n        static makeNullUser(): User {\r\n            return new User(-1, 'Test', 'Test_E', \"NA\", \"NA\");\r\n        }\r\n\r\n        getKey(): string {\r\n            return this.Id + '';\r\n        }\r\n\r\n        isNull(): boolean {\r\n            return this.Name.startsWith('N/A');\r\n        }\r\n\r\n        addOutletTaskCount(outletCode) {\r\n            if (!this.outletTaskCountMap[outletCode]) {\r\n                this.outletTaskCountMap[outletCode] = 0;\r\n            }\r\n            this.outletTaskCountMap[outletCode] = this.outletTaskCountMap[outletCode] + 1;\r\n        }\r\n\r\n        getOutletTaskCount(outletCode) {\r\n            return this.outletTaskCountMap[outletCode];\r\n        }\r\n\r\n        isInspector(): boolean {\r\n            return this.Role === 'INSPECTOR';\r\n        };\r\n\r\n        isOperator(): boolean {\r\n            return this.Role === 'OPERATOR';\r\n        };\r\n\r\n        isAdmin(): boolean {\r\n            return this.Role === 'ADMIN';\r\n        };\r\n\r\n        isExpired(): boolean {\r\n            return (this.Status === 'Expired');\r\n        }\r\n\r\n        isActive(): boolean {\r\n            return !this.isExpired();\r\n        }\r\n\r\n        getRoleName() {\r\n            return User.ROLE_NAME_MAP[this.Role] || this.Role;\r\n        };\r\n\r\n        onChange() {\r\n            this._dirty = true;\r\n        }\r\n    }\r\n\r\n    declare var STOCKS_JSON, OPTIONS_JSON;\r\n\r\n    export class Mgr {\r\n\r\n\r\n        public options: Cache<Option> = new Cache<Option>();\r\n        public stocks: Cache<Stock> = new Cache<Stock>();\r\n        private _svr: DbService;\r\n\r\n        constructor(svr: DbService) {\r\n            this._svr = svr;\r\n        }\r\n\r\n        initKV(): void {\r\n\r\n            this.stocks.init(this._svr, Stock.name, Stock.fromJson, STOCKS_JSON);\r\n\r\n            this.options.init(this._svr, Option.name, Option.fromJson, OPTIONS_JSON);\r\n            this.options.doSort((a: Option, b: Option) => {\r\n\r\n                let aDay = a.isExpired() ? (-Math.round(a._dayToExp / 10) * 1000) : a._dayToExp;\r\n                let bDay = b.isExpired() ? (-Math.round(b._dayToExp / 10) * 1000) : b._dayToExp;\r\n\r\n                return aDay - bDay;\r\n            })\r\n        }\r\n\r\n        public clearAll(): void {\r\n\r\n            this.options.clearAll();\r\n        }\r\n\r\n        //\r\n        //\r\n        // init(svr: DbService, res) {\r\n        //\r\n        //     this.clearAll();\r\n        //\r\n        //\r\n        //\r\n        //\r\n        // }\r\n    }\r\n\r\n\r\n    export class Meta {\r\n\r\n        private static _instance: Meta = new Meta;\r\n\r\n        _map: {} = {};\r\n\r\n        constructor() {\r\n        }\r\n\r\n        public static get(): Meta {\r\n            return this._instance;\r\n        }\r\n\r\n        public static isNeedUpdate(localVer: number) {\r\n\r\n            let serverVer = this.get().getVersion();\r\n\r\n            let res = serverVer > 0 && serverVer > localVer;\r\n            return res;\r\n        }\r\n\r\n        public static isNativeClientNeedUpdate(currNativeClientVersion: number) {\r\n\r\n            let expectedVer = this.get().getPhoneClientVersion();\r\n\r\n            let res = expectedVer > 0 && (currNativeClientVersion < expectedVer);\r\n            return res;\r\n        }\r\n\r\n        static init(jsons): void {\r\n\r\n            let meta = new Meta();\r\n            jsons = jsons || [];\r\n\r\n            for (let i = 0; i < jsons.length; i++) {\r\n                let json = jsons[i];\r\n                meta.put(json.Name, json.Value2);\r\n            }\r\n\r\n            this._instance = meta;\r\n\r\n            console.info(' meta: ' + JSON.stringify(this._instance._map));\r\n        }\r\n\r\n        public put(key: string, val: string): void {\r\n            if (this._map[key]) {\r\n                console.warn('duplicate meta key: ' + key + \", val:\" + this._map[key] + \", newVal: \" + val);\r\n            } else {\r\n                this._map[key] = val;\r\n            }\r\n        }\r\n\r\n        public get(key: string): string {\r\n\r\n            return this._map[key];\r\n        }\r\n\r\n        public getVersion(): number {\r\n            let v = this.get('version');\r\n            return parseInt(v);\r\n        }\r\n\r\n        public getPhoneClientVersion(): number {\r\n            let v = this.get('phoneClientVersion');\r\n            return parseInt(v);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    export class CvsHelper {\r\n\r\n\r\n        public static dash(val, idx?: number): string {\r\n            if (idx == null) {\r\n                idx = 4;\r\n            }\r\n            if (val && val.length > idx) {\r\n                val = val.substr(0, idx) + '-' + val.substr(idx);\r\n            }\r\n            return val;\r\n        }\r\n\r\n\r\n        public static valueOrNA(val): string {\r\n            return (val == null || val == undefined || val === 0 || val == 'NA') ? '--' : val;\r\n        }\r\n\r\n        public static cleanTxt(txt: string): string {\r\n            txt = txt || '';\r\n            return txt.replace(/,/g, '，').replace(/\\n/g, '　').replace(/\\\"/g, '`');\r\n\r\n        }\r\n    }\r\n\r\n    export class NetworkMgr {\r\n\r\n        public _isNetworkError: boolean = false;\r\n        public _networkErrorStart: Date = new Date();\r\n\r\n        public svr: DbService;\r\n        public $timeout = null;\r\n        public _delayedSyncTask = null;\r\n        public delaySeconds = 2;\r\n\r\n        constructor(svr: DbService, $timeout) {\r\n            this.svr = svr;\r\n            this.$timeout = $timeout;\r\n        }\r\n\r\n        public onDelayedSyncTasks(): void {\r\n\r\n            console.info('onDelayedSyncTasks ....');\r\n\r\n            if (this._delayedSyncTask) {\r\n\r\n                //this._delayedSyncTask.cancel();\r\n                this.$timeout.cancel(this._delayedSyncTask);\r\n                console.info(' prev delayed sync cancelled....');\r\n            }\r\n\r\n            this._delayedSyncTask = this.$timeout(() => {\r\n\r\n                console.info(this.delaySeconds + 's  times up, really do the sync ');\r\n                // this.svr.doSyncTasks();\r\n\r\n            }, this.delaySeconds * 1000)\r\n\r\n        }\r\n\r\n        public onNetworkOk(): void {\r\n            this._isNetworkError = false;\r\n        }\r\n\r\n        public onNetworkError(): void {\r\n\r\n            this._isNetworkError = true;\r\n            if (this.isTimeUp()) {\r\n                this._networkErrorStart = new Date();\r\n            }\r\n        }\r\n\r\n        public getTimeElapsed(): number {\r\n\r\n            if (this._networkErrorStart == null) {\r\n                return 9999;\r\n            }\r\n\r\n            let now = new Date();\r\n            let elapsed = (now.getTime() - this._networkErrorStart.getTime()) / 1000;\r\n\r\n            console.info(' network error time elapsed: ' + elapsed);\r\n            return elapsed;\r\n        }\r\n\r\n        public isTimeUp(): boolean {\r\n            return this.getTimeElapsed() > 60;\r\n        }\r\n\r\n        public isTimeToRetry(): boolean {\r\n\r\n            // if no network error, yet, do it.\r\n            if (!this._isNetworkError) {\r\n                return true;\r\n            }\r\n\r\n            // other-wise, if it elapsed 1 min?\r\n\r\n            return this.isTimeUp();\r\n\r\n        }\r\n\r\n        public reset() {\r\n            this._networkErrorStart = new Date();\r\n        }\r\n\r\n        public isNetworkError(): boolean {\r\n            return this._isNetworkError;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    declare let _;\r\n\r\n    export class Helper {\r\n\r\n        public static toDiff(obj1, obj2): string {\r\n\r\n\r\n            /**\r\n             * https://gist.github.com/Yimiprod/7ee176597fef230d1451\r\n             *\r\n             * Deep diff between two object, using lodash\r\n             * @param  {Object} obj1 Object compared\r\n             * @param  {Object} obj2   Object to compare with\r\n             * @return {Object}        Return a new object who represent the diff\r\n             */\r\n            function difference(obj1, obj2) {\r\n                function changes(obj1, obj2) {\r\n\r\n                    return _.transform(obj1, function (result, value, key) {\r\n                        if (!_.isEqual(value, obj2[key])) {\r\n                            result[key] = (_.isObject(value) && _.isObject(obj2[key])) ? changes(value, obj2[key]) : value;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                return changes(obj1, obj2);\r\n            }\r\n\r\n            let res = 'diff-NA';\r\n            try {\r\n\r\n                res = difference(obj1, obj2);\r\n            } catch (e) {\r\n                console.warn(e);\r\n            }\r\n\r\n            return '' + res;\r\n\r\n        }\r\n\r\n        public static json_replacer = (key, value) => {\r\n            if (key.startsWith('_#')) {\r\n                return '_#' + key\r\n\r\n            } else {\r\n                return value;\r\n            }\r\n        };\r\n\r\n\r\n        public static getNumber(str: string): number {\r\n            // parseInt ('xx12xx34xx'.replace( /^\\D+/g, ''))\r\n\r\n            return parseInt(str.replace(/^\\D+/g, ''));\r\n        }\r\n\r\n        public static timeDiffInSeconds(d1: Date, d2: Date): number {\r\n\r\n            if (!d1 || !d2) {\r\n                return 99999;\r\n            }\r\n\r\n            let diff = d1.getTime() - d1.getTime();\r\n            return Math.abs(diff / 1000);\r\n\r\n        }\r\n\r\n        public static timeDiffInMinutes(d1: Date, d2: Date): number {\r\n\r\n            if (!d1 || !d2) {\r\n                return 99999999;\r\n            }\r\n\r\n            let diff = d1.getTime() - d1.getTime();\r\n            return Math.abs(diff / 60000);\r\n\r\n        }\r\n\r\n\r\n        static showDate(date): string {\r\n            if (date) {\r\n\r\n                if (!date.format) {\r\n                    date = moment(date);\r\n                }\r\n\r\n                return date.format('YYYY-MM-DD');\r\n            } else {\r\n                return 'NA-' + (date || '');\r\n            }\r\n        }\r\n\r\n        static showTime(date): string {\r\n\r\n\r\n            if (date) {\r\n\r\n                if (!date.format) {\r\n\r\n\r\n                    date = moment(date);\r\n                }\r\n\r\n                return date.format('HH:mm');\r\n            } else {\r\n                return 'NA-' + (date || '');\r\n            }\r\n        }\r\n\r\n        public static getDateStr(date?: Date): string {\r\n\r\n\r\n            if (!date) {\r\n                date = new Date();\r\n            }\r\n\r\n            return this.showDate(date);\r\n\r\n        }\r\n\r\n        public static isEmpty(obj): boolean {\r\n            return obj === undefined || obj === null;\r\n        }\r\n\r\n        public static isBlank(obj): boolean {\r\n            return obj === undefined || obj === null || ('' + obj).trim() === '';\r\n        }\r\n\r\n        public static copyTxtToClipboard(svr: DbService, text: string): void {\r\n\r\n            // https://www.codegrepper.com/code-examples/javascript/how+to+copy+to+clipboard+in+angularjs+w3schools\r\n\r\n            // Since Async Clipboard API is not supported for all browser!\r\n\r\n            var textArea = document.createElement(\"textarea\");\r\n            textArea.value = text;\r\n            document.body.appendChild(textArea);\r\n            textArea.focus();\r\n            textArea.select();\r\n\r\n            try {\r\n                var successful = document.execCommand('copy');\r\n                var msg = successful ? 'successful' : 'unsuccessful';\r\n                console.log('Copying text command was ' + msg);\r\n\r\n\r\n                svr.UiInfo('copied ok')\r\n\r\n            } catch (err) {\r\n                console.log('Oops, unable to copy');\r\n\r\n                svr.UiInfo('copied failed! ')\r\n            }\r\n\r\n            document.body.removeChild(textArea);\r\n\r\n        }\r\n\r\n        public static copyToClipboard(svr: DbService, docId): void {\r\n\r\n\r\n            // https://www.w3schools.com/howto/howto_js_copy_clipboard.asp\r\n\r\n            /* Get the text field */\r\n            let copyText = document.getElementById(docId);\r\n\r\n            /* Select the text field */\r\n            // @ts-ignore\r\n            copyText.select();\r\n\r\n            // @ts-ignore\r\n            copyText.setSelectionRange(0, 99999); /* For mobile devices */\r\n\r\n            /* Copy the text inside the text field */\r\n            document.execCommand(\"copy\");\r\n\r\n            /* Alert the copied text */\r\n            // alert(\"Copied the text: \" + copyText.value);\r\n\r\n\r\n            svr.UiInfo('data copied ')\r\n\r\n\r\n        }\r\n\r\n\r\n        public static clearAll(obj): void {\r\n\r\n            if (obj === null || obj === undefined) {\r\n                return;\r\n            }\r\n\r\n            if (obj.constructor === Array) {\r\n                while (obj.length > 0) {\r\n                    obj.pop();\r\n                }\r\n            } else {\r\n                for (let prop in obj) {\r\n                    if (obj.hasOwnProperty(prop)) {\r\n                        delete obj[prop];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        static dateTime2date(datetime: string): string {\r\n            if (this.isBlank(datetime)) {\r\n                return datetime;\r\n            }\r\n            return datetime.substr(0, 10);\r\n        }\r\n\r\n        // compare date1, date2,   return -1, 0, 1  as  date1 - date 2\r\n        static compareDate(date1: string, date2: string): number {\r\n            if (Helper.isBlank(date1)) {\r\n                return -1\r\n            }\r\n\r\n            if (Helper.isBlank(date2)) {\r\n                return 1\r\n            }\r\n\r\n            // date format '2018-01-01\r\n            let d1 = this.dateTime2date(date1).replace('-', '').replace('-', '');\r\n            let d2 = this.dateTime2date(date2).replace('-', '').replace('-', '');\r\n\r\n            return parseInt(d1) - parseInt(d2);\r\n\r\n        }\r\n\r\n\r\n        public static getLocalTime(): Date {\r\n\r\n            return new Date();\r\n            //\r\n            // let now = new Date();\r\n            // let localDate = new Date(now.getTime() + now.getTimezoneOffset() * 60 * 1000);\r\n            // let offset = now.getTimezoneOffset() / 60;\r\n            // let hours = now.getHours();\r\n            //\r\n            // localDate.setHours(hours - offset);\r\n            //\r\n            // return localDate;\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    declare var Upload;\r\n\r\n    export class TmpStore {\r\n\r\n        public static TAG: string = 'TmpStore';\r\n        PIN_KEY = Config.APP_ID + '-outlet-pin-';\r\n        private _svr: DbService = null;\r\n        private storage = window.localStorage;\r\n        private _all: Option[] = null;\r\n        private _pins: string[] = null;\r\n\r\n        constructor(svr: DbService) {\r\n            this._svr = svr;\r\n        }\r\n\r\n        public getAllPin(): string[] {\r\n\r\n            if (this._pins == null) {\r\n                this._pins = [];\r\n                let key = this.getPinKey();\r\n                let jsonStr = this.storage.getItem(key);\r\n                if (!Helper.isBlank(jsonStr)) {\r\n                    let items = JSON.parse(jsonStr);\r\n                    for (const item of items) {\r\n                        this._pins.push(item);\r\n                    }\r\n                }\r\n\r\n                console.info(key + ' pins: ' + JSON.stringify(this._pins));\r\n            }\r\n            return this._pins;\r\n        }\r\n\r\n        public getPinKey(): string {\r\n            return this.PIN_KEY + this._svr.getConfigYear() + '-' + this._svr.getConfigMonth();\r\n        }\r\n\r\n        public doSavePins() {\r\n            let key = this.getPinKey();\r\n            let json = JSON.stringify(this.getAllPin());\r\n            this.storage.setItem(key, json);\r\n        }\r\n\r\n        public doPin(outletCode: string): void {\r\n\r\n            let pins = this.getAllPin();\r\n            if (pins.indexOf(outletCode) < 0) {\r\n                pins.push(outletCode);\r\n                this.doSavePins();\r\n            }\r\n        }\r\n\r\n        public isPinned(outletCode: string): boolean {\r\n            let pins = this.getAllPin();\r\n            return pins.indexOf(outletCode) >= 0;\r\n        }\r\n\r\n        public doPinToggle(outletCode: string): void {\r\n            if (this.isPinned(outletCode)) {\r\n                this.doUnpin(outletCode);\r\n            } else {\r\n                this.doPin(outletCode);\r\n            }\r\n        }\r\n\r\n        public doUnpin(outletCode: string): void {\r\n            let pins = this.getAllPin();\r\n\r\n            let idx = pins.indexOf(outletCode);\r\n\r\n            if (idx < 0) {\r\n                let msg = ' hmm...  unpin non-existing one... : ' + outletCode;\r\n                console.warn(msg);\r\n\r\n            } else {\r\n                pins.splice(idx, 1);\r\n                this.doSavePins();\r\n\r\n            }\r\n            return;\r\n        }\r\n\r\n        public listUpdated(): void {\r\n            this._all = null;\r\n        }\r\n\r\n        public clearAll(): void {\r\n            this._all = null;\r\n            this._pins = null;\r\n        }\r\n\r\n\r\n        public clearById(id: number) {\r\n            let key = this.makeKeyByTaskId(id);\r\n\r\n            console.info(TmpStore.TAG + ' clearing id key: ' + key);\r\n            this.storage.removeItem(key);\r\n\r\n            this.listUpdated();\r\n        }\r\n\r\n        // public doUploadAll(): void {\r\n        //\r\n        //     // sync all memory dirty-tasks first;\r\n        //     this._svr.doSyncTasks().then((res) => {\r\n        //\r\n        //         this.listUpdated();\r\n        //\r\n        //         // then, sync all local-tmp tasks\r\n        //         let tmpTasks = this.getAll();\r\n        //\r\n        //         if (tmpTasks.length > 0) {\r\n        //             this._svr.doSyncTasks(tmpTasks).then(() => {\r\n        //\r\n        //                     // need to refresh data from server, since tmpStore (local-storage) has latest data uploaded, and sync from server\r\n        //                     // to match newly updated data.\r\n        //                     this._svr.doRefreshData()\r\n        //                 }\r\n        //             );\r\n        //         } else {\r\n        //             this._svr.refreshView();\r\n        //         }\r\n        //\r\n        //         let msg = TmpStore.TAG + ' doUploadAll : ' + tmpTasks.length + ', tmp: ' + this.getAll().length;\r\n        //         console.info(msg);\r\n        //         this._svr.doLogServerMsg(msg);\r\n        //     });\r\n        //\r\n        //\r\n        // }\r\n\r\n\r\n        public hasPending(): boolean {\r\n            return this.getAll().length > 0;\r\n        }\r\n\r\n        public getAll(): Option[] {\r\n\r\n            if (this._all == null) {\r\n\r\n                let year = this._svr.config.getConfigYear();\r\n                let month = this._svr.config.getConfigMonth();\r\n\r\n                let prefix = 'smkt-task-' + year + '-' + month + '-';\r\n\r\n                let keys = Object.keys(this.storage);\r\n                let res: Option[] = [];\r\n                let skipped = [];\r\n\r\n                for (const key of keys) {\r\n                    if (key.startsWith(prefix)) {\r\n                        let task = this.getByKey(key);\r\n                        if (task) {\r\n                            res.push(task);\r\n                        }\r\n                    } else {\r\n                        // console.info(TmpStore.TAG + ' skipped key: ' + key);\r\n                        skipped.push(key);\r\n\r\n                        let pinKey = this.getPinKey();\r\n                        if (key.startsWith(this.PIN_KEY) && key != pinKey) {\r\n                            // this.storage.removeItem(key);\r\n                            let msg = 'skip removing old pin key: ' + key;\r\n                            console.info(msg);\r\n                            // this._svr.doLogServerMsg(msg);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this._all = res;\r\n                console.info(TmpStore.TAG + ' skipped keys: ' + JSON.stringify(skipped));\r\n                console.info(TmpStore.TAG + ' found tmp tasks: ' + this._all.length);\r\n            }\r\n\r\n            return this._all;\r\n\r\n        }\r\n\r\n        public save(task: Option) {\r\n\r\n            let tag = this.makeKey(task);\r\n\r\n            // task.onChange();\r\n            // task.prepareSave();\r\n            this.storage.setItem(tag, JSON.stringify(task));\r\n\r\n            this.listUpdated();\r\n\r\n            console.info(TmpStore.TAG + ' saved : ' + task.Id);\r\n        }\r\n\r\n\r\n        public getByKey(key: string): Option {\r\n            let jsonStr = this.storage.getItem(key);\r\n\r\n            let res: Option = null;\r\n            if (jsonStr) {\r\n                let json = JSON.parse(jsonStr);\r\n                res = Option.fromJson(this._svr, json);\r\n                // console.info(TmpStore.TAG + ' unpacking: ' + jsonStr );\r\n                // console.info(TmpStore.TAG + ' unpacked: ' + JSON.stringify(res) );\r\n                res._dirty = true;\r\n\r\n                // let tlet0 = res.getTasklets()[0];\r\n                console.info(TmpStore.TAG + ' load id: ' + res.Id);\r\n\r\n            } else {\r\n                let msg = TmpStore.TAG + ' task not found on local-storage for key' + key;\r\n                console.info(msg);\r\n\r\n                // this._svr.doLogServerMsg(msg);\r\n            }\r\n\r\n            return res;\r\n\r\n        }\r\n\r\n        public getByTaskId(id: number): Option {\r\n\r\n            let tag = this.makeKeyByTaskId(id);\r\n            return this.getByKey(tag);\r\n        }\r\n\r\n        public makeKeyByTaskId(taskId: number): string {\r\n            // sample : smkt-2019-1-xxxx  , where xxx is task.id\r\n            return 'smkt-task-' + this._svr.config.getConfigYear() + '-' + this._svr.config.getConfigMonth() + '-' + taskId\r\n\r\n        }\r\n\r\n        public makeKey(t: Option): string {\r\n            return this.makeKeyByTaskId(t.Id)\r\n        }\r\n    }\r\n\r\n\r\n    export class Cache<T extends Base> {\r\n\r\n        private _all: T[] = [];\r\n        private _idMap: { [id: string]: T } = {};\r\n        private _keyMap: { [id: string]: T } = {};\r\n\r\n        public clearAll(): void {\r\n            Helper.clearAll(this._all);\r\n            Helper.clearAll(this._idMap);\r\n            Helper.clearAll(this._keyMap);\r\n        }\r\n\r\n        public getAll(): T[] {\r\n            return this._all;\r\n        }\r\n\r\n        public get(id: number): T {\r\n            return this._idMap[id];\r\n        }\r\n\r\n        public getByKey(key: string): T {\r\n            return this._keyMap[key];\r\n        }\r\n\r\n        public add(e: T) {\r\n            //this._all.push(e);\r\n            this._all.unshift(e);\r\n            this._idMap[e.Id] = e;\r\n\r\n\r\n            let key = e.getKey();\r\n            if (key) {\r\n\r\n                if (this._keyMap[key]) {\r\n                    let msg = ' ! duplicate key for ' + name + ', key: ' + key;\r\n                    console.warn(msg);\r\n                    alert(msg);\r\n                } else {\r\n                    this._keyMap[key] = e;\r\n                }\r\n            }\r\n        }\r\n\r\n        public doSort(fn?): void {\r\n\r\n            if (!fn) {\r\n                fn = (a: T, b: T) => {\r\n\r\n                    if (a.getKey()) {\r\n                        return a.getKey().localeCompare(b.getKey());\r\n                    } else {\r\n                        return a.Id - b.Id;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this._all.sort(fn);\r\n\r\n        }\r\n\r\n\r\n        public init(svr: DbService, name: string, maker, jsons) {\r\n\r\n            // let res = new Cache<T>();\r\n            this.clearAll();\r\n            jsons = jsons || [];\r\n\r\n            for (let i = 0; i < jsons.length; i++) {\r\n                let json = jsons[i];\r\n\r\n                //let e: T =   T.fromJson2(json);\r\n                let e: T = maker(svr, json);\r\n                this.add(e);\r\n            }\r\n            console.info(' ' + name + ' :' + this._all.length);\r\n        }\r\n    }\r\n\r\n    export class OptionStats {\r\n        exposure: number;\r\n        amtCost: number;\r\n        amtDaySum: number;\r\n        numContracts: number;\r\n        numRows: number;\r\n        amtCashIn: number;\r\n\r\n        cost_exposure_ratio: number;\r\n\r\n\r\n        calc(options: Option[]) {\r\n            this.exposure = 0;\r\n            this.amtCost = 0;\r\n            this.numContracts = 0;\r\n            this.numRows = 0;\r\n            this.amtDaySum = 0;\r\n            this.amtCashIn = 0;\r\n\r\n            this.cost_exposure_ratio = 0;\r\n\r\n            for (const option of options) {\r\n                this.exposure += option.toHKD(option.getExposure());\r\n                this.amtCost += option.toHKD(option.AmtCost);\r\n                this.numContracts += Math.abs(option.NumContract);\r\n                this.numRows++;\r\n                this.amtDaySum += option.toHKD(option.Premium * option.getStock().OptionMultiple);\r\n\r\n                this.amtDaySum += option.toHKD(option.getAmtPerDay())\r\n            }\r\n\r\n            this.cost_exposure_ratio = (this.amtCost / this.exposure * 100);\r\n\r\n\r\n        }\r\n    }\r\n\r\n    export class Stock extends Base {\r\n        static str = 'Stock| Name:str; Symbol:str; Price:number; OptionMultiple:num; IsHK:int; ';\r\n\r\n        // js --\r\n        public Name: string = '';\r\n        public Symbol: string = '';\r\n        public Price: number = 0;\r\n        public OptionMultiple: number = 0;\r\n        public IsHK: number = 0;\r\n        public PriceLast: number =0;\r\n\r\n        public _dirty: boolean = true;\r\n\r\n        _exposure_p: number = 0;\r\n        _exposure_c: number = 0;\r\n        _cash_in_amt: number = 0;\r\n        _cash_lost_amt: number = 0;\r\n        _num_call = 0;\r\n        _num_put = 0;\r\n        // _change: number = 0;\r\n        // _change_pct: string = '';\r\n\r\n\r\n        static fromJson(svr: DbService, json): Stock {\r\n            let e = new Stock();\r\n            e._dirty = false;\r\n\r\n\r\n            e.Name = json.Name || '';\r\n            e.Symbol = json.Symbol || '';\r\n            e.Price = json.Price || 0;\r\n            e.OptionMultiple = json.OptionMultiple || 0;\r\n            e.IsHK = json.IsHK || 0;\r\n            e.PriceLast = json.PriceLast || 0;\r\n\r\n            if(!e.PriceLast) {\r\n                e.PriceLast = e.Price;\r\n            }\r\n\r\n            return e;\r\n        }\r\n\r\n        getKey(): string {\r\n            return this.Symbol;\r\n        }\r\n\r\n        isHK(): boolean {\r\n            return this.IsHK > 0;\r\n        }\r\n\r\n        getChange() : number {\r\n            return this.Price -this.PriceLast;\r\n        }\r\n\r\n        getChangePct() : number {\r\n            return (this.getChange()/this.PriceLast * 100);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    export class Option extends Base {\r\n\r\n        static str = 'Option| Name:str; Strike:num; StockTicker:str; DateBought:str; DateExp: str; Price:num; PriceAtBought:num; PriceAtExp:num Premium:int; AmtCost:int; NumContract:int; NumShareExposed; P_C:str; ';\r\n\r\n\r\n        // js --\r\n        public Id: number = -1;\r\n        public Status: number = 0;\r\n        public Remark: string = '';\r\n        public UpdateBy: number = 0;\r\n        public UpdateAt: Date;\r\n\r\n\r\n        public Name: string = '';\r\n        public Strike: number = 0;\r\n        public StockTicker: string = '';\r\n        public DateBought: string = '';\r\n        public DateExp: string = '';\r\n        public Premium: number = 0;\r\n        public AmtCost: number = 0;\r\n        public NumContract: number = 0;\r\n        public NumShareExposed: number = 0;\r\n        public P_C: string = '';\r\n\r\n\r\n        public _dirty: boolean = true;\r\n        public _dayToExp: number;\r\n        public _dayBoughtTillExp: number;\r\n        public _stock: Stock;\r\n\r\n        static fromJson(svr: DbService, json): Option {\r\n            let e = new Option();\r\n            e._dirty = false;\r\n            e.Id = json.Id;\r\n            e.Status = json.Status;\r\n            e.Remark = json.Remark;\r\n            e.UpdateBy = json.UpdateBy;\r\n            e.UpdateAt = json.UpdateAt;\r\n            e.Name = json.Name;\r\n            e.Strike = json.Strike;\r\n            e.StockTicker = json.StockTicker;\r\n            e.DateBought = json.DateBought;\r\n            e.DateExp = json.DateExp;\r\n            e.Premium = json.Premium;\r\n            e.AmtCost = json.AmtCost;\r\n\r\n            e.NumContract = json.NumContract;\r\n            e.NumShareExposed = json.NumShareExposed;\r\n            e.P_C = json.P_C;\r\n\r\n\r\n            e._stock = svr.mgr.stocks.getByKey(e.getStockSymbol());\r\n\r\n            e.init();\r\n            return e;\r\n        }\r\n\r\n\r\n        getStockSymbol(): string {\r\n\r\n            if (this.Name.startsWith('騰訊')) {\r\n                return '0700';\r\n            }\r\n\r\n            if (this.Name.startsWith('阿里') || this.Name.startsWith('BA')) {\r\n                return '9988';\r\n            }\r\n            if (this.Name.startsWith('FU')) {\r\n                return 'FUTU';\r\n            }\r\n\r\n            console.warn(' cannot map to symbol, name: ' + this.Name);\r\n            return 'N/A'\r\n        }\r\n\r\n\r\n        getColor(): string {\r\n\r\n            let day = this._dayToExp;\r\n\r\n\r\n            let res = '';\r\n            if (this.isExpired()) {\r\n                res = 'lightgrey';\r\n            } else {\r\n\r\n\r\n                if (!this.isOutOfMoney(false)) {\r\n\r\n                    if (this.isOutOfMoney(true)) {\r\n                        res = 'lightpink';\r\n                    } else {\r\n                        res = 'lightcoral'\r\n                    }\r\n\r\n                } else {\r\n\r\n                    let buffer = this.getPriceBufferPct();\r\n                    if(buffer < 5 ) {\r\n                        res = 'lightyellow'\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n            return res;\r\n\r\n            // if (day < 10) {\r\n            //     return 'light'\r\n            // }\r\n\r\n        }\r\n\r\n        getAmtPerDay(): number {\r\n            return (this.AmtCost) / this._dayBoughtTillExp;\r\n        }\r\n\r\n        getExposure(): number {\r\n            return Math.abs(this.NumShareExposed) * this.Strike;\r\n        }\r\n\r\n\r\n\r\n        //\r\n        // toJSON(): string {\r\n        //     return JSON.stringify(this, Helper.json_replacer);\r\n        // }\r\n\r\n        getShareMultiple(): number {\r\n            return this.getStock().OptionMultiple\r\n        }\r\n\r\n        getStock(): Stock {\r\n            return this._stock;\r\n        }\r\n\r\n        init() {\r\n\r\n\r\n            if (this.DateExp.indexOf('-') < 0) {\r\n                let str = this.DateExp;\r\n                // str = '20201127'\r\n                this.DateExp = str.substr(0, 4) + '-' + str.substr(4, 2) + '-' + str.substr(6);\r\n            }\r\n\r\n            if (this.DateBought.indexOf('/') > 0) {\r\n                let mm = moment(this.DateBought);\r\n                this.DateBought = mm.format('YYYY-MM-DD');\r\n            }\r\n\r\n\r\n            let datExp = moment(this.DateExp);\r\n            let dayBought = moment(this.DateBought);\r\n            let today = moment();\r\n\r\n            // Helper.compareDate()\r\n            this._dayToExp = datExp.diff(today, 'days') + 1;\r\n            this._dayBoughtTillExp = datExp.diff(dayBought, 'days') + 1;\r\n\r\n\r\n        }\r\n\r\n        isExpired(): boolean {\r\n            return this._dayToExp < 0;\r\n        }\r\n\r\n        match(filter): boolean {\r\n            let txt = this.Strike + '-' + this.P_C;\r\n\r\n            return (txt.indexOf(filter) >= 0);\r\n        }\r\n\r\n        toHKD(amtPerDay: number): number {\r\n            let ratio = 1;\r\n            if (!this.isHK()) {\r\n                ratio = 7.76;\r\n            }\r\n\r\n            return amtPerDay * ratio;\r\n        }\r\n\r\n        isHK(): boolean {\r\n\r\n            return this.getStock().isHK();\r\n\r\n            // return !this.Name.startsWith('FU')\r\n        }\r\n\r\n        isCall(): boolean {\r\n            return this.P_C == 'C';\r\n        }\r\n\r\n        getSign(): number {\r\n\r\n\r\n            let res = 1;\r\n\r\n            if (this.NumContract < 0) {\r\n                res = -res;\r\n            }\r\n\r\n\r\n            if (this.isCall()) {\r\n                res = -res;\r\n            }\r\n\r\n\r\n            return res;\r\n        }\r\n\r\n\r\n        isOutOfMoney(withPremium = false): boolean {\r\n\r\n\r\n            let breakEven = this.getBreakEvenPrice(withPremium);\r\n            let price = this.getStock().Price;\r\n            let delta = this.getSign() * (price - breakEven);\r\n            return delta < 0;\r\n        }\r\n\r\n        getBreakEvenPrice(withPremium = true): number {\r\n\r\n            let delta = 0;\r\n            if (withPremium) {\r\n\r\n                let sign = this.getSign();\r\n\r\n                delta = (sign * this.Premium);\r\n            }\r\n\r\n            return this.Strike + delta;\r\n        }\r\n\r\n        getCashIn() : number {\r\n            return this.Premium * this._stock.OptionMultiple;\r\n        }\r\n\r\n        getLost(): number {\r\n            let res = 0;\r\n            if (!this.isOutOfMoney(true)) {\r\n                let breakEven = this.getBreakEvenPrice(true);\r\n                let price = this.getStock().Price;\r\n                let delta = this.getSign() * (price - breakEven);\r\n                res = delta * this.getStock().OptionMultiple;\r\n            }\r\n\r\n            return  res;\r\n        }\r\n\r\n        getPriceBufferPct() : number {\r\n\r\n            let bep = this.getBreakEvenPrice(true);\r\n            let price = this.getStock().Price;\r\n\r\n            return  ( this.getSign() * ( bep - price) / price * 100)\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n"]}