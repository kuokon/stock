{"version":3,"file":"Services.js","sourceRoot":"","sources":["../../../src/ot/model/Services.ts"],"names":[],"mappings":"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","sourcesContent":["declare var moment;\r\n\r\nmodule MyApp {\r\n\r\n\r\n    declare let NativeApp: {\r\n        takePhoto, listFiles, uploadAllFiles, setFileUploadURL, doRefreshZip, toast, doDisplayAndShutdown, listPhotoPack, doRemoveAllPhotoPacks\r\n    };\r\n\r\n    export class DbService {\r\n\r\n\r\n        // photo_id = 0;\r\n\r\n\r\n        public config: Config = null;\r\n        public mgr: Mgr;\r\n        public helper: Helper = Helper;\r\n        public tmpStore: TmpStore;\r\n\r\n        public networkMgr: NetworkMgr = null;\r\n        public $localStorage = window.localStorage;\r\n\r\n        public static $inject = ['$q', '$rootScope', '$http', '$mdToast', '$mdSidenav', '$location', '$anchorScroll', '$route', '$timeout'];\r\n        constructor(private $q: ng.IQService,\r\n                    private $rootScope: ng.IRootScopeService,\r\n                    public $http: ng.IHttpService,\r\n                    private $mdToast: ng.material.IToastService,\r\n                    private $mdSidenav: ng.material.ISidenavService,\r\n                    private $location,\r\n                    private $anchorScroll,\r\n                    public $route,\r\n                    public $timeout\r\n        ) {\r\n\r\n            this.config = new Config(this, window.localStorage);\r\n            this.mgr = new Mgr(this);\r\n            this.mgr.initKV();\r\n\r\n        }\r\n\r\n\r\n        // === helper functions\r\n\r\n\r\n        getVersion(): number {\r\n            return this.config.version;\r\n        }\r\n\r\n        isDataLoaded(): boolean {\r\n            return this.config.loaded;\r\n        }\r\n\r\n        alert(msg: string): void {\r\n            alert(msg);\r\n        }\r\n\r\n\r\n        clearAllData(): void {\r\n\r\n            console.info('clearing all data');\r\n\r\n\r\n            this.config.loaded = false;\r\n\r\n        };\r\n\r\n        isPhotoEnabled(): boolean {\r\n\r\n            return (this.hasNative() && !Helper.isEmpty(NativeApp.takePhoto)) || this.isDev();\r\n\r\n        }\r\n\r\n        isPhone(): boolean {\r\n            return this.config.isPhone;\r\n        }\r\n\r\n\r\n        hasNative(): boolean {\r\n\r\n            try {\r\n                return !Helper.isEmpty(NativeApp)\r\n            } catch (e) {\r\n\r\n                return false;\r\n            }\r\n\r\n            // return !Helper.isEmpty(NativeApp);\r\n        }\r\n\r\n        getConfigMonth(): number {\r\n            return this.config.getConfigMonth();\r\n        };\r\n\r\n        getNumImageWaitingUpload(): number {\r\n            return this.getAllImageFileWaitingForUpload().length;\r\n            // return this._numPhotoWaitingUpload;\r\n        }\r\n\r\n        // getNumImageWaitingUploadBak(): number {\r\n        //     return this._numPhotoWaitingUpload;\r\n        // }\r\n\r\n        getConfigYear(): number {\r\n            return this.config.getConfigYear();\r\n\r\n        };\r\n\r\n        onModeGen(txt): ModelGen {\r\n\r\n            return ModelGen.from(txt);\r\n        }\r\n\r\n\r\n        goTo(tag: string, hash ?: string): void {\r\n\r\n            // console.info('goTo : ' + tag + ', hash: ' + hash);\r\n\r\n            if (tag && tag.startsWith('..')) {\r\n                let path = this.$location.path();\r\n                let idx = path.lastIndexOf('/');\r\n                tag = path.substr(0, idx);\r\n\r\n                console.info(' go prev: ' + path + ' --> ' + tag);\r\n            }\r\n\r\n\r\n            this.$location.path(tag);\r\n\r\n            if (hash) {\r\n                this.$location.hash(hash);\r\n            } else {\r\n\r\n                this.$location.hash('');\r\n                window.scrollTo(0, 0);\r\n            }\r\n\r\n            // this.$mdSidenav('left').close();\r\n\r\n        }\r\n\r\n        onVersionClicked(): void {\r\n            this.goTo('/task/test');\r\n        }\r\n\r\n        onInitNative(ver: string) {\r\n            this.config.onInitNative(ver);\r\n            // this.onRefreshPhotoUploadCount();\r\n        }\r\n\r\n\r\n        onRefreshPhotoUploadCount(): void {\r\n            // this._numPhotoWaitingUpload = this.getAllImageFileWaitingForUpload().length;\r\n\r\n            let url = this.$location.path();\r\n            this.refreshView();\r\n\r\n            // if( url.startsWith('/task/my')) {\r\n            //     this.refreshView();\r\n            // }\r\n\r\n        }\r\n\r\n\r\n        refreshView(noAnchor?: boolean): void {\r\n\r\n\r\n            // console.error('refreshing view....');\r\n            console.info('refreshing view....');\r\n            this.$route.reload();\r\n\r\n            if (!noAnchor) {\r\n                this.$timeout(() => {\r\n                    this.$anchorScroll();\r\n                })\r\n            } else {\r\n                window.scrollTo(0, 0);\r\n                console.info('skip anchor');\r\n            }\r\n\r\n        }\r\n\r\n        onUpdateVersion(): void {\r\n\r\n            if (this.isPhone()) {\r\n                if (confirm('你確定 更新 吗？？')) {\r\n                    NativeApp.doRefreshZip();\r\n                }\r\n            } else {\r\n                alert('Please press \"Shift-F5\" to upgrade!');\r\n            }\r\n        }\r\n\r\n        onShutdownNativePhoneApp(): void {\r\n\r\n            NativeApp.doDisplayAndShutdown();\r\n        }\r\n\r\n\r\n        getAllImageFileWaitingForUpload(): string[] {\r\n\r\n            if (this.isPhone()) {\r\n\r\n                let json = NativeApp.listFiles();\r\n\r\n                console.info('all image files json : ' + json);\r\n                let files = JSON.parse(json);\r\n\r\n                return files\r\n            } else {\r\n\r\n                // console.error('getAllImageFileWaitingForUpload...');\r\n                // console.info('not in phone, return empty list for waiting files');\r\n\r\n                return [];\r\n            }\r\n        }\r\n\r\n        isNeedUpdate(): boolean {\r\n            return Meta.isNeedUpdate(this.config.version)\r\n                && !this.isPhoneClientNeedUpdate();   // if phone client needs update, then skip software update, since we want native client updated first.\r\n        }\r\n\r\n        isPhoneClientNeedUpdate(): boolean {\r\n            return this.isPhone() && Meta.isNativeClientNeedUpdate(this.config.phoneNativeClientVersion);\r\n        }\r\n\r\n\r\n        dumpData(dd): void {\r\n\r\n            if (dd) {\r\n                console.info('dump data : ' + JSON.stringify(dd));\r\n            } else {\r\n                console.info('dump all : ' + JSON.stringify(this.config.version));\r\n            }\r\n\r\n            console.info('path: ' + this.$location.path());\r\n\r\n\r\n        };\r\n\r\n        dumpDataToFile(dd): void {\r\n\r\n            if (!dd) {\r\n                dd = this.config;\r\n            }\r\n\r\n            let str = JSON.stringify(dd);\r\n            let blob = new Blob([str], {type: \"text/plain;charset=utf-8\"});\r\n\r\n            //saveAs(blob, \"data.json\");\r\n            console.info('data: ' + str)\r\n        };\r\n\r\n\r\n        doRefreshData() {\r\n\r\n            this.clearAllData();\r\n            // this.doGetInfo();\r\n\r\n        }\r\n\r\n\r\n        UiInfo(msg, t = 3000): void {\r\n\r\n\r\n            this.$mdToast.show(\r\n                this.$mdToast.simple()\r\n                    .textContent(msg)\r\n                    .position('top right')\r\n                    .hideDelay(t).parent(document.getElementById('toast-container'))\r\n            );\r\n\r\n\r\n            console.info(msg);\r\n            //Util.UiInfo(msg, t);\r\n        };\r\n\r\n        UiError(msg, t = 3000): void {\r\n\r\n\r\n            //Util.UiError(msg, t);\r\n\r\n            this.$mdToast.show(\r\n                this.$mdToast.simple()\r\n                    .textContent(msg)\r\n                    .position('top right')\r\n                    .hideDelay(t).parent(document.getElementById('toast-container'))\r\n            );\r\n\r\n            console.warn(msg);\r\n        };\r\n\r\n\r\n        isDev(): boolean {\r\n            return this.config.isDev;\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n// native\r\n\r\n}"]}