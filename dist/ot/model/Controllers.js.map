{"version":3,"file":"Controllers.js","sourceRoot":"","sources":["../../../src/ot/model/Controllers.ts"],"names":[],"mappings":"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","sourcesContent":["// import * as angular from \"angular\";\r\n\r\n\r\nmodule MyApp {\r\n\r\n\r\n    export class AdminController {\r\n\r\n        static $inject = ['DbService', '$routeParams', '$mdSidenav', '$mdToast', '$mdDialog', '$mdMedia', '$mdBottomSheet'];\r\n        title: string = 'Admin';\r\n        svr: DbService;\r\n\r\n        constructor(private DbService: DbService,\r\n                    $routeParams: any,\r\n                    private $mdSidenav: ng.material.ISidenavService,\r\n                    private $mdToast: ng.material.IToastService,\r\n                    private $mdDialog: ng.material.IDialogService,\r\n                    private $mdMedia: ng.material.IMedia,\r\n                    private $mdBottomSheet: ng.material.IBottomSheetService) {\r\n\r\n            this.svr = DbService;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    export class OptionController {\r\n\r\n        static $inject = ['DbService', '$routeParams', '$mdSidenav', '$mdToast', '$mdDialog', '$mdMedia', '$mdBottomSheet'];\r\n        title: string = 'Option';\r\n        svr: DbService;\r\n\r\n        stats: OptionStats = new OptionStats();\r\n        isShowExpire: boolean = false;\r\n        isShowStocks: boolean = true;\r\n        filter:string;\r\n\r\n\r\n        constructor(private DbService: DbService,\r\n                    $routeParams: any,\r\n                    private $mdSidenav: ng.material.ISidenavService,\r\n                    private $mdToast: ng.material.IToastService,\r\n                    private $mdDialog: ng.material.IDialogService,\r\n                    private $mdMedia: ng.material.IMedia,\r\n                    private $mdBottomSheet: ng.material.IBottomSheetService) {\r\n\r\n            this.svr = DbService;\r\n\r\n        }\r\n\r\n        onMakeStock() : void {\r\n            let stock = Stock.fromJson(this.svr,'');\r\n\r\n            this.svr.mgr.stocks.add(stock);\r\n        }\r\n\r\n\r\n\r\n        getOptions(filter:string) : Option[] {\r\n\r\n            let tmp = this.svr.mgr.options.getAll();\r\n\r\n            if(!this.isShowExpire) {\r\n                tmp  = tmp.filter( e=> { return !e.isExpired()})\r\n            }\r\n\r\n            let res = [];\r\n\r\n            if(!Helper.isBlank(filter)) {\r\n                for (const re of tmp) {\r\n                    if(re.match(filter)){\r\n                        res.push(re);\r\n                    }\r\n                }\r\n\r\n            } else  {\r\n                res = tmp;\r\n            }\r\n\r\n            this.stats.calc(res);\r\n            return res;\r\n\r\n        }\r\n\r\n\r\n        onParse(raw) : ParseResult {\r\n\r\n            let isHK = false;\r\n            return Import.parseRaw(this.svr, raw, isHK);\r\n        }\r\n\r\n        getSubheaders() : NV[] {\r\n            return [\r\n                {name: 'main', value: '/'}\r\n                , {name: 'import', value: '/option/'}\r\n            ]\r\n        }\r\n\r\n        onCopyDataToClipboard(options:Option[] ) : void {\r\n\r\n            //let res :Option[] = pr.parsed;\r\n            let buf = JSON.stringify(options, Helper.json_replacer);\r\n            Helper.copyTxtToClipboard(this.svr, buf);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}