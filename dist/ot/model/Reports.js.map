{"version":3,"file":"Reports.js","sourceRoot":"","sources":["../../../src/ot/model/Reports.ts"],"names":[],"mappings":"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","sourcesContent":["// // declare var Document: any;\r\n// declare var docx: any;\r\n// // declare var Document: any;\r\n// declare var Media: any;\r\n//\r\n// declare var Paragraph: any;\r\n// declare var Packer: any;\r\n// declare var TextRun: any;\r\n//\r\n// declare var header_image: any;\r\n// declare var Table: any;\r\n// declare var WidthType: any;\r\n// declare var PageMargin: any;\r\n// declare var saveAs: any;\r\n//\r\n// module MyApp {\r\n//\r\n//\r\n//     export class ReportMgr {\r\n//\r\n//         svr: DbService;\r\n//\r\n//         constructor(svr: DbService) {\r\n//             this.svr = svr;\r\n//         }\r\n//\r\n//         public makePhotoIdReport() {\r\n//\r\n//\r\n//             let templateMap: {};\r\n//             let yearMap: { [year_month: string]: any };\r\n//             let idMap: { [photoId: number]: number } = {}; // photoId/count map\r\n//\r\n//         }\r\n//\r\n//         public makeRefPriceXReport() {\r\n//\r\n//             let refPrices: Cache<RefPriceX> = new Cache<RefPriceX>();\r\n//             let refPriceFallbacks: Cache<RefPriceFallback> = new Cache<RefPriceFallback>();\r\n//\r\n//             this.svr.Api.httpGetPriceCompare().then(res => {\r\n//\r\n//\r\n//                 refPrices.init(RefPriceX.name, RefPriceX.fromJson, res.data.RefPrice);\r\n//                 refPriceFallbacks.init(RefPriceFallback.name, RefPriceFallback.fromJson, res.data.RefFallback);\r\n//                 refPrices.doSort((a: RefPriceX, b: RefPriceX) => {\r\n//\r\n//                     // return a.ItemCode.localeCompare(b.ItemCode);\r\n//\r\n//                     return (a.ItemCode + a.OutletCode).localeCompare(b.ItemCode + b.OutletCode);\r\n//\r\n//                 });\r\n//\r\n//                 let fbs = refPriceFallbacks.getAll();\r\n//                 for (const fb of fbs) {\r\n//\r\n//                     let rp = refPrices.getByKey(fb.getKey());\r\n//\r\n//\r\n//                     rp.RefPrice = fb.Price;\r\n//                     rp.RefQty = fb.Qty;\r\n//                     rp.RefUnit = fb.Unit;\r\n//                     rp.RefMonth = 0;\r\n//                     rp.RefYear = 0;\r\n//                     rp.CollectMethod = '**'\r\n//                 }\r\n//\r\n//                 // fbs = fbs.sort((a, b) => {\r\n//                 //\r\n//                 //     return a.ItemCode.localeCompare(b.ItemCode);\r\n//                 //\r\n//                 //     //return  (a.ItemCode + a.OutletCode).localeCompare(b.ItemCode + b.OutletCode);\r\n//                 //    // if(a.ItemCode != b.ItemCode) {\r\n//                 //    //     return a.ItemCode.localeCompare(b.ItemCode);\r\n//                 //    // } else  {\r\n//                 //    //     return a.OutletCode.localeCompare(b.OutletCode);\r\n//                 //    // }\r\n//                 // });\r\n//\r\n//\r\n//                 // 街碼,\r\n//                 let col_header = '商品編號,商品或服務,商戶編號,商戶名稱,商品說明,地址,Qty ,單位編號,單位,  上月(次) 價格, $ 本月價格,變動率(%),類型, 對比月份\\n';\r\n//\r\n//                 let sp = ',';\r\n//                 let sb = [];\r\n//                 let svr = this.svr;\r\n//\r\n//\r\n//                 function makeLine(rp: RefPriceX): string {\r\n//\r\n//                     // let owners = svr.getTemplateOutletOwners(o.OutletCode);\r\n//                     // let ownerName = (owners && owners[0]) ? owners[0].Name : null;\r\n//                     let o = svr.getOutlet(rp.OutletCode);\r\n//                     let itemName = svr.getItemName(rp.ItemCode);\r\n//                     let ap = svr.approveMgr.getApprove(rp.OutletCode, rp.ItemCode);\r\n//                     let ref = rp.RefYear ? rp.RefYear + '-' + rp.RefMonth + '-' + rp.RefCollectMethod : '--';\r\n//\r\n//\r\n//                     return CvsHelper.dash(rp.ItemCode, 4) + sp + (CvsHelper.cleanTxt(itemName))\r\n//                         + sp + CvsHelper.dash(rp.OutletCode, 4)\r\n//                         + sp + CvsHelper.valueOrNA(CvsHelper.cleanTxt(o.Name))\r\n//                         + sp + CvsHelper.cleanTxt(ap.Description)\r\n//                         + sp + CvsHelper.cleanTxt(o.Address)\r\n//                         + sp + CvsHelper.valueOrNA(rp.getQty())\r\n//                         + sp + CvsHelper.valueOrNA(rp.Unit)\r\n//                         + sp + CvsHelper.valueOrNA(rp.getUnit(svr.unitTypeMgr))\r\n//                         + sp + CvsHelper.valueOrNA(rp.RefPrice)\r\n//                         + sp + CvsHelper.valueOrNA(rp.Price)\r\n//                         + sp + CvsHelper.valueOrNA(rp.getPriceChange(svr.unitTypeMgr))\r\n//                         + sp + CvsHelper.valueOrNA(rp.CollectMethod)\r\n//                         + sp + CvsHelper.valueOrNA(ref)\r\n//                         + '\\n';\r\n//                 }\r\n//\r\n//\r\n//                 sb.push(col_header);\r\n//\r\n//                 let refxs = refPrices.getAll();\r\n//                 for (const refx of refxs) {\r\n//                     sb.push(makeLine(refx));\r\n//                 }\r\n//\r\n//                 let str = sb.join('');\r\n//                 let blob = new Blob([str], {type: \"text/plain;charset=utf-8\"});\r\n//                 let month = svr.getConfigMonth();\r\n//                 let year = svr.getConfigYear();\r\n//                 let fileName = 'smkt-' + year + '-' + month + '-V06P.xls';\r\n//                 saveAs(blob, fileName);\r\n//\r\n//\r\n//                 let msg = 'report : ' + fileName;\r\n//                 this.svr.doLogServerMsg(msg);\r\n//\r\n//             });\r\n//         }\r\n//\r\n//\r\n//         public makeOutletAssignmentReport() {\r\n//\r\n//             let sp = ',';\r\n//             let sb = [];\r\n//             let svr = this.svr;\r\n//\r\n//             let col_header = '商品編號, 商戶 , 地址, 聯絡人, Tel,  調查員,  內部 備註 \\n';\r\n//\r\n//             let outlets = this.svr.getAllOutlets();\r\n//\r\n//\r\n//             function makeLine(o: Outlet): string {\r\n//\r\n//                 let owners = svr.getTemplateOutletOwners(o.OutletCode);\r\n//                 let ownerName = (owners && owners[0]) ? owners[0].Name : null;\r\n//\r\n//\r\n//                 return CvsHelper.dash(o.OutletCode, 4)\r\n//                     + sp + (CvsHelper.cleanTxt(o.Name))\r\n//                     + sp + CvsHelper.valueOrNA(CvsHelper.cleanTxt(o.Address))\r\n//                     + sp + CvsHelper.valueOrNA(CvsHelper.cleanTxt(o.Contact))\r\n//                     + sp + CvsHelper.valueOrNA(o.Tel)\r\n//                     + sp + CvsHelper.valueOrNA(ownerName)\r\n//                     + sp + CvsHelper.valueOrNA(CvsHelper.cleanTxt(o.Remark2))\r\n//                     + '\\n';\r\n//\r\n//             }\r\n//\r\n//             sb.push(col_header);\r\n//             for (const outlet of outlets) {\r\n//                 sb.push(makeLine(outlet));\r\n//             }\r\n//\r\n//             let str = sb.join('');\r\n//             let blob = new Blob([str], {type: \"text/plain;charset=utf-8\"});\r\n//             let month = svr.getConfigMonth();\r\n//             let year = svr.getConfigYear();\r\n//             let fileName = 'smkt-' + year + '-' + month + '-assignment.xls';\r\n//\r\n//\r\n//             saveAs(blob, fileName);\r\n//\r\n//\r\n//             let msg = 'report : ' + fileName;\r\n//             this.svr.doLogServerMsg(msg);\r\n//\r\n//         }\r\n//\r\n//         public makePV11_12() {\r\n//\r\n//\r\n//             let sp = ',';\r\n//             let sb = [];\r\n//             let svr = this.svr;\r\n//             let col_header = '商品編號, 名稱 , 商戶編號, 名稱,  數量, 單位, \\n';\r\n//\r\n//\r\n//             let templates = svr.getAllTemplates();\r\n//             let notActives = templates.filter((e) => {\r\n//                 return !e.isActive();\r\n//             });\r\n//             let news = templates.filter((e) => {\r\n//                 return e.getIsAddedRecently();\r\n//             });\r\n//\r\n//             let empties = templates.filter((e) => {\r\n//                 return e.isActive() && e.getTasklets().length === 0;\r\n//             });\r\n//\r\n//             function makeLine(ap: Template): string {\r\n//\r\n//                 return CvsHelper.dash(ap.OutletCode, 4)\r\n//                     + sp + CvsHelper.cleanTxt(svr.getOutletName(ap.OutletCode))\r\n//                     + sp + CvsHelper.dash(ap.ItemCode, 4)\r\n//                     + sp + CvsHelper.cleanTxt(svr.getItemName(ap.ItemCode))\r\n//                     + sp + CvsHelper.valueOrNA(ap.BaseQty)\r\n//                     + sp + CvsHelper.valueOrNA('(' + ap.BaseUnit + ') ' + svr.unitTypeMgr.getUnitName(ap.BaseUnit))\r\n//                     + '\\n';\r\n//\r\n//             }\r\n//\r\n//\r\n//             sb.push('\\n\\n *** 新增商品 *** \\n');\r\n//             sb.push(col_header);\r\n//             for (const ap of news) {\r\n//                 sb.push(makeLine(ap));\r\n//             }\r\n//\r\n//\r\n//             sb.push('\\n\\n *** 空白 商品 *** \\n');\r\n//             sb.push(col_header);\r\n//             for (const ap of empties) {\r\n//                 sb.push(makeLine(ap));\r\n//             }\r\n//\r\n//             sb.push('\\n\\n *** 刪除商品或服務 *** \\n');\r\n//             sb.push(col_header);\r\n//             for (const ap of notActives) {\r\n//                 sb.push(makeLine(ap));\r\n//             }\r\n//\r\n//             let str = sb.join('');\r\n//             let blob = new Blob([str], {type: \"text/plain;charset=utf-8\"});\r\n//             let month = svr.getConfigMonth();\r\n//             let year = svr.getConfigYear();\r\n//\r\n//             let fileName = 'smkt-' + year + '-' + month + '-PV11_12.xls';\r\n//\r\n//             saveAs(blob, fileName);\r\n//\r\n//             let msg = 'report : ' + fileName;\r\n//             this.svr.doLogServerMsg(msg);\r\n//\r\n//         }\r\n//\r\n//\r\n//         public makePV01() {\r\n//             let sp = ',';\r\n//             let sb = [];\r\n//             let svr = this.svr;\r\n//             let col_header = '商戶編號, 名稱 , 商品編號, 名稱,  數量, 單位, 本月 價格,類型 \\n';\r\n//             let sub_col_header = '商戶編號, 名稱 , 商品編號, 名稱,  數量, 單位, 本月 價格,類型, 被替代 商戶, 名稱, 替代  \\n';\r\n//\r\n//\r\n//             let allApproves = svr.getAllApproves();\r\n//             let olds = allApproves.filter((ap) => {\r\n//                 return ap.CollectMethod == 'I'\r\n//             });\r\n//             let subs = allApproves.filter((ap) => {\r\n//                 return ap.CollectMethod == 'S'\r\n//             });\r\n//\r\n//             let Ws = allApproves.filter((ap) => {\r\n//                 return ap.CollectMethod == 'S'\r\n//             });\r\n//\r\n//             let news = allApproves.filter((ap) => {\r\n//                 return ap.CollectMethod == 'N'\r\n//             });\r\n//             let dels = allApproves.filter((ap) => {\r\n//                 return ap.CollectMethod == 'X'\r\n//             });\r\n//\r\n//             let As = allApproves.filter((ap) => {\r\n//                 return ap.CollectMethod == 'A'\r\n//             });\r\n//\r\n//             let Rs = allApproves.filter((ap) => {\r\n//                 return ap.CollectMethod == 'R'\r\n//             });\r\n//\r\n//\r\n//             function makeLine(ap: Approve): string {\r\n//\r\n//                 let subsExtra = '';\r\n//\r\n//                 if (ap.CollectMethod == 'S') {\r\n//                     subsExtra =\r\n//                         CvsHelper.valueOrNA(CvsHelper.dash(ap.SubstituteOutletCode, 4))\r\n//                         + sp + (ap.SubstituteOutletCode ? svr.getOutletName(ap.SubstituteOutletCode) : '')\r\n//                         + sp + CvsHelper.valueOrNA(ap.SubstituteSubType);\r\n//                 }\r\n//\r\n//\r\n//                 // sb.push('商戶編號, 商戶名稱, 編號, 姓名, 收集數目, 完成數目,完成日期, 審批總數, M, F, I, S, X, N,日期 \\n');\r\n//                 return CvsHelper.dash(ap.OutletCode, 4)\r\n//                     + sp + CvsHelper.cleanTxt(svr.getOutletName(ap.OutletCode))\r\n//\r\n//                     + sp + CvsHelper.dash(ap.ItemCode, 4)\r\n//                     + sp + CvsHelper.cleanTxt(svr.getItemName(ap.ItemCode))\r\n//                     + sp + CvsHelper.valueOrNA(ap.ApproveQty)\r\n//\r\n//                     + sp + CvsHelper.valueOrNA('(' + ap.ApproveUnit + ') ' + svr.unitTypeMgr.getUnitName(ap.ApproveUnit))\r\n//                     + sp + CvsHelper.valueOrNA(ap.ApprovePrice)\r\n//                     + sp + CvsHelper.valueOrNA(ap.CollectMethod)\r\n//\r\n//                     + sp + subsExtra\r\n//\r\n//\r\n//                     + '\\n';\r\n//\r\n//             }\r\n//\r\n//             sb.push('\\n\\n *** 仍用 I 舊數 商品或服務 *** \\n');\r\n//             sb.push(col_header);\r\n//             for (const ap of olds) {\r\n//                 sb.push(makeLine(ap));\r\n//             }\r\n//\r\n//             sb.push('\\n\\n *** 商戶 S 替代 檢查表 *** \\n');\r\n//             // 被替代\r\n//             sb.push(sub_col_header);\r\n//             for (const ap of subs) {\r\n//                 sb.push(makeLine(ap));\r\n//             }\r\n//\r\n//             sb.push('\\n\\n *** 商戶 W 被替代 檢查表 *** \\n');\r\n//             // 被替代\r\n//             sb.push(sub_col_header);\r\n//             for (const ap of Ws) {\r\n//                 sb.push(makeLine(ap));\r\n//             }\r\n//\r\n//\r\n//             sb.push('\\n\\n *** 商戶 N 新增 商品檢查表 *** \\n');\r\n//             sb.push(col_header);\r\n//             for (const ap of news) {\r\n//                 sb.push(makeLine(ap));\r\n//             }\r\n//\r\n//             sb.push('\\n\\n *** 商戶 X 刪除 商品檢查表 *** \\n');\r\n//             sb.push(col_header);\r\n//             for (const ap of dels) {\r\n//                 sb.push(makeLine(ap));\r\n//             }\r\n//\r\n//\r\n//             sb.push('\\n\\n *** 商戶 A 不匯入 代超市 商品檢查表 *** \\n');\r\n//             sb.push(col_header);\r\n//             for (const ap of As) {\r\n//                 sb.push(makeLine(ap));\r\n//             }\r\n//\r\n//             sb.push('\\n\\n *** 商戶 R 不匯入 代其他 商品檢查表 *** \\n');\r\n//             sb.push(col_header);\r\n//             for (const ap of Rs) {\r\n//                 sb.push(makeLine(ap));\r\n//             }\r\n//\r\n//\r\n//             let str = sb.join('');\r\n//             let blob = new Blob([str], {type: \"text/plain;charset=utf-8\"});\r\n//             let month = svr.getConfigMonth();\r\n//             let year = svr.getConfigYear();\r\n//\r\n//\r\n//             let fileName = 'smkt-' + year + '-' + month + '-PV01.xls';\r\n//             saveAs(blob, fileName);\r\n//\r\n//             let msg = 'report : ' + fileName;\r\n//             this.svr.doLogServerMsg(msg);\r\n//\r\n//         }\r\n//\r\n//\r\n//         public makeP01() {\r\n//\r\n//             let sp = ',';\r\n//             let sb = [];\r\n//\r\n//             let svr = this.svr;\r\n//\r\n//             sb.push('調查員, 編號, 商品編號, 商品名稱 , 商品摘要, 商戶編號, 商戶名稱, 數量, 單位,單位, 本月 價格,原價, 類型,  調查員 備註 \\n');\r\n//\r\n//             let user = svr.getUser(null);\r\n//\r\n//             //let map = svr.getApproveOutletsMap();\r\n//             let itemCode;\r\n//             let outletCode;\r\n//\r\n//\r\n//             for (let outletCode of svr.getApproveOutletCodes()) {\r\n//\r\n//                 let line = '';\r\n//                 let approves: Approve[] = svr.approveMgr.getApproves(outletCode);\r\n//                 let itemDesc = 'N/A';\r\n//                 let remark = 'N/A';\r\n//                 let description = '--';\r\n//\r\n//                 for (let i = 0; i < approves.length; i++) {\r\n//\r\n//                     let approve = approves[i];\r\n//\r\n//                     //description = CvsHelper.cleanTxt(approve.Description);\r\n//                     itemCode = CvsHelper.dash(approve.ItemCode, 4);\r\n//                     outletCode = CvsHelper.dash(approve.OutletCode, 4);\r\n//\r\n//                     let tasks = approve.getTasks();\r\n//                     for (let j = 0; j < tasks.length; j++) {\r\n//                         let task = tasks[j];\r\n//\r\n//                         user = svr.getUser(task.OwnerUserId);\r\n//\r\n//                         remark = CvsHelper.cleanTxt(task.getTaskletRemarks());\r\n//\r\n//                         let tasklets = task.getTasklets();\r\n//                         for (let k = 0; k < tasklets.length; k++) {\r\n//\r\n//                             let tlet: Tasklet = tasklets[k];\r\n//                             let description = CvsHelper.cleanTxt(tlet.Name);\r\n//\r\n//                             if (approve.OutletCode == '0655011' && approve.ItemCode == '09112101') {\r\n//                                 console.info(' desc: ' + description);\r\n//                             }\r\n//\r\n//                             line = user.Name + sp + user.Id + sp + itemCode\r\n//                                 + sp + CvsHelper.cleanTxt(svr.getItemName(approve.ItemCode))\r\n//                                 + sp + description\r\n//                                 + sp + outletCode + sp + svr.getOutletName(approve.OutletCode)\r\n//                                 + sp + CvsHelper.valueOrNA(tlet.Qty)\r\n//                                 + sp + CvsHelper.valueOrNA(tlet.Unit)\r\n//                                 + sp + svr.unitTypeMgr.getUnitName(tlet.Unit)\r\n//                                 + sp + CvsHelper.valueOrNA(tlet.Price)\r\n//                                 + sp + CvsHelper.valueOrNA(tlet.SpecialPrice)\r\n//                                 + sp + CvsHelper.valueOrNA(approve.CollectMethod)\r\n//                                 + sp + CvsHelper.valueOrNA(remark) + '\\n';\r\n//\r\n//                             sb.push(line);\r\n//                         }\r\n//                     }\r\n//                 }\r\n//             }\r\n//\r\n//             let str = sb.join('');\r\n//             let blob = new Blob([str], {type: \"text/plain;charset=utf-8\"});\r\n//             let month = svr.getConfigMonth();\r\n//             let year = svr.getConfigYear();\r\n//             let fileName = 'smkt-P01-' + year + '-' + month + '.xls';\r\n//\r\n//             saveAs(blob, fileName);\r\n//\r\n//             let msg = 'report : ' + fileName;\r\n//             this.svr.doLogServerMsg(msg);\r\n//\r\n//         }\r\n//\r\n//\r\n//         public makePT04() {\r\n//\r\n//\r\n//             let sp = ',';\r\n//             let sb = [];\r\n//             let skipped = [];\r\n//             let svr = this.svr;\r\n//             sb.push('商品編號, 商品名稱 , 商品摘要, 商戶編號, 商戶名稱, 數量, 單位,單位 \\n');\r\n//\r\n//             let ts = svr.getAllTemplates();\r\n//             for (const t of ts) {\r\n//\r\n//\r\n//                 let description = '--';\r\n//\r\n//                 let isActive = t.isActive();\r\n//\r\n//                 if (isActive) {\r\n//                     description = t.TaskletsText || '';\r\n//                     description = description.replace(/,/g, ' ').replace(/\\n/g, ' ');\r\n//                 } else {\r\n//                     description = '-- NA --';\r\n//                 }\r\n//\r\n//                 let qty = t.BaseQty;\r\n//                 let unit = t.BaseUnit;\r\n//\r\n//                 let tlet0 = t.getTasklets()[0];\r\n//                 if (tlet0) {\r\n//                     qty = tlet0.Qty;\r\n//                     unit = tlet0.Unit;\r\n//                 }\r\n//\r\n//\r\n//                 let line = CvsHelper.dash(t.ItemCode, 4)\r\n//                     + sp + CvsHelper.cleanTxt(svr.getItemName(t.ItemCode))\r\n//                     + sp + CvsHelper.cleanTxt(description)\r\n//                     + sp + CvsHelper.dash(t.OutletCode, 4)\r\n//                     + sp + CvsHelper.cleanTxt(svr.getOutletName(t.OutletCode))\r\n//                     + sp + CvsHelper.valueOrNA(qty) + sp + CvsHelper.valueOrNA(unit)\r\n//                     + sp + svr.unitTypeMgr.getUnitName(unit)\r\n//                     + '\\n';\r\n//\r\n//                 if (isActive) {\r\n//                     sb.push(line)\r\n//                 } else {\r\n//                     skipped.push(line);\r\n//                 }\r\n//             }\r\n//\r\n//             let str = sb.join('');\r\n//\r\n//\r\n//             let blob = new Blob([str], {type: \"text/plain;charset=utf-8\"});\r\n//\r\n//\r\n//             let month = svr.getConfigMonth();\r\n//             let year = svr.getConfigYear();\r\n//             let fileName = 'smkt-PT04-' + year + '-' + month + '.xls';\r\n//\r\n//             saveAs(blob, fileName);\r\n//\r\n//             let msg = 'report : ' + fileName;\r\n//             this.svr.doLogServerMsg(msg);\r\n//\r\n//\r\n//         }\r\n//\r\n//\r\n//         public makePT01() {\r\n//\r\n//\r\n//             let sp = ',';\r\n//             let sb = [];\r\n//             let svr = this.svr;\r\n//             sb.push('調查員, 編號, 商品編號, 商品名稱 , 商品摘要, 商戶編號, 商戶名稱, 數量, 單位,單位, 本月 收集價格, 類型, 調查員 備註 \\n');\r\n//\r\n//             let user = svr.getUser(null);\r\n//             //let map = svr.getApproveOutletsMap();\r\n//             let outletCodes = svr.getApproveOutletCodes();\r\n//             let itemCode;\r\n//             let outletCode;\r\n//\r\n//\r\n//             let valueOrNA = CvsHelper.valueOrNA;\r\n//             let dash = CvsHelper.dash;\r\n//\r\n//\r\n//             for (let outletCode of outletCodes) {\r\n//\r\n//                 let line = '';\r\n//                 let approves: Approve[] = svr.approveMgr.getApproves(outletCode);\r\n//                 let itemDesc = 'N/A';\r\n//                 let remark = 'N/A';\r\n//                 let description = '--';\r\n//\r\n//                 for (let i = 0; i < approves.length; i++) {\r\n//                     let approve = approves[i];\r\n//\r\n//                     let tasks = approve.getTasks();\r\n//                     if (tasks && tasks[0]) {\r\n//                         let task = tasks[0];\r\n//                         user = svr.getUser(task.OwnerUserId);\r\n//                         // remark = task.Remark || '--';\r\n//\r\n//                         remark = task.getTaskletRemarks();\r\n//                     }\r\n//\r\n//                     description = approve.Description || '';\r\n//                     description = description.replace(/,/g, ' ').replace(/\\n/g, ' ');\r\n//                     remark = remark.replace(/,/g, ' ').replace(/\\n/g, ' ');\r\n//                     itemCode = dash(approve.ItemCode, 4);\r\n//                     let dashedCode = dash(approve.OutletCode, 4);\r\n//\r\n//                     line = user.Name + sp + user.Id + sp + itemCode\r\n//                         + sp + CvsHelper.cleanTxt(svr.getItemName(approve.ItemCode))\r\n//                         + sp + CvsHelper.cleanTxt(description)\r\n//                         + sp + dashedCode\r\n//                         + sp + CvsHelper.cleanTxt(svr.getOutletName(approve.OutletCode))\r\n//                         + sp + valueOrNA(approve.ApproveQty) + sp + valueOrNA(approve.ApproveUnit) + sp +\r\n//                         svr.unitTypeMgr.getUnitName(approve.ApproveUnit)\r\n//                         + sp + valueOrNA(approve.ApprovePrice) + sp + valueOrNA(approve.CollectMethod) + sp + valueOrNA(remark) + '\\n';\r\n//\r\n//                     sb.push(line);\r\n//                 }\r\n//\r\n//             }\r\n//\r\n//\r\n//             let str = sb.join('');\r\n//             let blob = new Blob([str], {type: \"text/plain;charset=utf-8\"});\r\n//\r\n//\r\n//             let month = svr.getConfigMonth();\r\n//             let year = svr.getConfigYear();\r\n//             let fileName = 'smkt-PT01-' + year + '-' + month + '.xls';\r\n//\r\n//             saveAs(blob, fileName);\r\n//\r\n//             let msg = 'report : ' + fileName;\r\n//             this.svr.doLogServerMsg(msg);\r\n//\r\n//         }\r\n//\r\n//         makeP3TaskStats() {\r\n//             let sp = ',';\r\n//             let sb = [];\r\n//             let svr = this.svr;\r\n//\r\n//             let infolets: Cache<Infolet> = new Cache<Infolet>();\r\n//\r\n//             // 收集日期\t收集時間\t 編號\t 姓名\t商戶編號\t 商戶名稱\t地址\t 收集數目\t 完成數目\r\n//\r\n//             //sb.push('id, linkId, updateBy, time \\n');\r\n//             sb.push('ID, 收集日期, 收集時間,  編號,  姓名, 商戶編號,  商戶名稱, 地址,  收集數目,  完成數目\\n');\r\n//             svr.doGetInfoletTaskStats().then(res => {\r\n//\r\n//                 let user = svr.getUser(null);\r\n//\r\n//                 infolets.init(Infolet.name, Infolet.fromJson, res.data.infolets);\r\n//\r\n//                 let all = infolets.getAll();\r\n//                 all = all.sort((a, b) => {\r\n//\r\n//                     if (a.UpdateBy == b.UpdateBy) {\r\n//\r\n//                         return ((a.UpdateAt + '').localeCompare(b.UpdateAt + ''));\r\n//\r\n//                     } else {\r\n//                         return a.UpdateBy - b.UpdateBy;\r\n//                     }\r\n//\r\n//                 });\r\n//\r\n//                 let lastOutlet = '';\r\n//                 let lastNumDone = -1;\r\n//\r\n//                 for (const il of all) {\r\n//\r\n//                     let task = Task.getTaskById(il.LinkId);\r\n//\r\n//                     if (!task) {\r\n//\r\n//                         console.warn('task not found, id: ' + il.LinkId);\r\n//                         // sb.push( il + '\\n') ;\r\n//                         continue;\r\n//                     }\r\n//\r\n//                     let outlet = svr.mgr.outlets.getByKey(task.OutletCode);\r\n//                     let user = svr.mgr.users.get(il.UpdateBy);\r\n//                     let obj = JSON.parse(il.Data);\r\n//                     let date = new Date(il.UpdateAt);\r\n//\r\n//                     if (outlet.OutletCode == lastOutlet && obj.NumDone == lastNumDone) {\r\n//                         continue;\r\n//                     }\r\n//\r\n//                     lastOutlet = outlet.OutletCode;\r\n//                     lastNumDone = obj.NumDone;\r\n//\r\n//\r\n//                     let line = il.Id\r\n//                         + sp + Helper.showDate(date)\r\n//                         + sp + Helper.showTime(date)\r\n//\r\n//                         //+ sp + il.LinkId + '(' + CvsHelper.cleanTxt(outlet.Name) + ')'\r\n//\r\n//                         + sp + user.Id\r\n//                         + sp + user.Name\r\n//                         + sp + CvsHelper.dash(outlet.OutletCode)\r\n//                         + sp + CvsHelper.cleanTxt(outlet.Name)\r\n//                         + sp + CvsHelper.cleanTxt(outlet.Address)\r\n//                         + sp + obj.NumTotal\r\n//                         + sp + obj.NumDone\r\n//                         + '\\n';\r\n//\r\n//                     sb.push(line)\r\n//\r\n//                 }\r\n//\r\n//\r\n//                 let str = sb.join('');\r\n//                 let blob = new Blob([str], {type: \"text/plain;charset=utf-8\"});\r\n//                 let month = svr.getConfigMonth();\r\n//                 let year = svr.getConfigYear();\r\n//\r\n//\r\n//                 let fileName = 'smkt-P3-' + year + '-' + month + '-Assignment.xls';\r\n//                 saveAs(blob, fileName);\r\n//\r\n//\r\n//                 let msg = 'report : ' + fileName;\r\n//                 this.svr.doLogServerMsg(msg);\r\n//             });\r\n//\r\n//         }\r\n//\r\n//         // p3-' + year + '-' + month + '-複檢分配表.xls\r\n//         makeP3() {\r\n//\r\n//             let sp = ',';\r\n//             let sb = [];\r\n//             let svr = this.svr;\r\n//\r\n//             // 調查員, 編號, 商品編號, 商品名稱 , 商品摘要, \"原調查員編號\"\r\n//\r\n//             sb.push('商戶編號, 商戶名稱, 編號, 原調查員, 編號, 審核員, 複查數目, 日期 \\n');\r\n//\r\n//             let user = svr.getUser(null);\r\n//\r\n//             //let map = svr.getApproveOutletsMap();\r\n//             let itemCode;\r\n//             let outletCode;\r\n//\r\n//\r\n//             for (let outletCode of svr.getApproveOutletCodes()) {\r\n//\r\n//                 let line = '';\r\n//                 let approves: Approve[] = svr.approveMgr.getApproves(outletCode);\r\n//                 let itemDesc = 'N/A';\r\n//                 let remark = 'N/A';\r\n//                 let description = '--';\r\n//                 let latestRecheckDate = null;\r\n//\r\n//                 let owners = Task.getTaskOutletOwners(outletCode);\r\n//\r\n//\r\n//                 let u1: User = this.svr.mgr.users.get(9999);\r\n//                 let u2: User = null;\r\n//\r\n//                 if (owners && owners.length > 0) {\r\n//                     u1 = owners[0];\r\n//                 }\r\n//\r\n//                 if (owners && owners.length > 1) {\r\n//                     u2 = owners[1];\r\n//\r\n//                     if (!u2) {\r\n//                         console.info('u2 null??');\r\n//                     } else {\r\n//\r\n//                         // has u2 now\r\n//\r\n//                         let tasks = Task.getTasksInOutlet(outletCode);\r\n//                         for (let task of tasks) {\r\n//                             if (task.OwnerUserId == u2.Id) {\r\n//                                 if (Helper.compareDate(latestRecheckDate, task.UpdateAt) < 0) {\r\n//                                     latestRecheckDate = task.UpdateAt;\r\n//                                 }\r\n//                             }\r\n//                         }\r\n//                     }\r\n//                 }\r\n//\r\n//\r\n//                 latestRecheckDate = Helper.dateTime2date(latestRecheckDate);\r\n//\r\n//                 u1 = u1 || User.fromJson(\"\");\r\n//                 u2 = u2 || User.fromJson(\"\");\r\n//\r\n//                 // sb.push('商戶編號, 商戶名稱, , 原調查員, , 審核員, 複查數目,日期 \\n');\r\n//                 line = CvsHelper.dash(outletCode, 4)\r\n//                     + sp + CvsHelper.cleanTxt(svr.getOutletName(outletCode))\r\n//                     + sp + CvsHelper.valueOrNA(u1.Id)\r\n//                     + sp + CvsHelper.cleanTxt(u1.Name)\r\n//                     + sp + CvsHelper.valueOrNA(u2 && u2.Id)\r\n//                     + sp + CvsHelper.valueOrNA(u2 && u2.Name)\r\n//                     + sp + CvsHelper.valueOrNA(u2 && u2.getOutletTaskCount(outletCode))\r\n//                     + sp + CvsHelper.valueOrNA(latestRecheckDate)\r\n//                     + '\\n';\r\n//\r\n//                 sb.push(line);\r\n//                 // }\r\n//             }\r\n//\r\n//             let str = sb.join('');\r\n//             let blob = new Blob([str], {type: \"text/plain;charset=utf-8\"});\r\n//             let month = svr.getConfigMonth();\r\n//             let year = svr.getConfigYear();\r\n//             let fileName = 'smkt-P3-' + year + '-' + month + '-複檢分配表.xls';\r\n//\r\n//             saveAs(blob, fileName);\r\n//\r\n//             let msg = 'report : ' + fileName;\r\n//             this.svr.doLogServerMsg(msg);\r\n//\r\n//         }\r\n//\r\n//\r\n//         // p2-' + year + '-' + month + '-工作進度表.xls\r\n//         makeP2() {\r\n//\r\n//             let sp = ',';\r\n//             let sb = [];\r\n//             let svr = this.svr;\r\n//\r\n//\r\n//             // sb.push(', , , 外勤收集, , ,, , 內部審批, , , , , , \\n');\r\n//             sb.push('商戶編號, 商戶名稱, 編號, 姓名, 收集數目, 完成數目,完成日期, 審批總數, M, F, I, S,W, X, N, A, R,日期, 檢2日期, 內部留言 \\n');\r\n//\r\n//             //let map = svr.getApproveOutletsMap();\r\n//             // let outletCode;\r\n//\r\n//             let statuses: OutletApproveStatus[] = svr.getApproveStatuses();\r\n//             for (const status of statuses) {\r\n//\r\n//                 let o = svr.mgr.getOutlet(status.outletCode);\r\n//                 let os = svr.mgr.getStatus(status.outletCode);\r\n//\r\n//\r\n//                 //for (const uid of Object.keys(status.userTaskStatusMap)) {\r\n//                 let owners = status.getOwners(svr);\r\n//                 if (owners.length == 0) {\r\n//                     owners.push(User.makeNullUser());\r\n//                     console.warn(' adding null-owner to outlet: ' + status.outletCode);\r\n//                 }\r\n//\r\n//                 for (const user of owners) {\r\n//\r\n//                     //let count = status.userMap[uid];\r\n//                     // let user = svr.getUser(uid);\r\n//                     let uid = user.Id;\r\n//\r\n//                     let taskStatus: TaskStatus = status.getTaskStatus(uid) || new TaskStatus(status.outletCode);\r\n//\r\n//                     let lockDate = taskStatus.lastDate;\r\n//\r\n//                     // sb.push('商戶編號, 商戶名稱, 編號, 姓名, 收集數目, 完成數目,完成日期, 審批總數, M, F, I, S, X, N,日期 \\n');\r\n//                     let line = CvsHelper.dash(o.OutletCode, 4)\r\n//                         + sp + CvsHelper.cleanTxt(o.Name)\r\n//                         + sp + CvsHelper.valueOrNA(user.Id)\r\n//                         + sp + CvsHelper.cleanTxt(user.Name)\r\n//                         + sp + CvsHelper.valueOrNA(taskStatus.numTotal)\r\n//                         + sp + CvsHelper.valueOrNA(taskStatus.numDone)\r\n//                         + sp + CvsHelper.valueOrNA(taskStatus.isLocked ? taskStatus.lastDate : null)\r\n//                         + sp + CvsHelper.valueOrNA(status.numTotal)\r\n//                         // + sp + CvsHelper.valueOrNA(status.numApproved)\r\n//                         + sp + CvsHelper.valueOrNA(status.collectionMethodMap['M'])\r\n//                         + sp + CvsHelper.valueOrNA(status.collectionMethodMap['F'])\r\n//                         + sp + CvsHelper.valueOrNA(status.collectionMethodMap['I'])\r\n//                         + sp + CvsHelper.valueOrNA(status.collectionMethodMap['S'])\r\n//                         + sp + CvsHelper.valueOrNA(status.collectionMethodMap['W'])\r\n//                         + sp + CvsHelper.valueOrNA(status.collectionMethodMap['X'])\r\n//                         + sp + CvsHelper.valueOrNA(status.collectionMethodMap['N'])\r\n//                         + sp + CvsHelper.valueOrNA(status.collectionMethodMap['A'])\r\n//                         + sp + CvsHelper.valueOrNA(status.collectionMethodMap['R'])\r\n//                         + sp + CvsHelper.valueOrNA(status.isAllApproved() ? status.lastDate : null)\r\n//                         + sp + CvsHelper.valueOrNA(os.getCheck2Date())\r\n//                         + sp + CvsHelper.valueOrNA(o.Remark2)\r\n//                         + '\\n';\r\n//\r\n//                     sb.push(line);\r\n//                 }\r\n//\r\n//                 // if(!owners || !owners.length) {\r\n//                 //     let line =\r\n//                 //\r\n//                 // }\r\n//\r\n//             }\r\n//\r\n//\r\n//             let str = sb.join('');\r\n//             let blob = new Blob([str], {type: \"text/plain;charset=utf-8\"});\r\n//             let month = svr.getConfigMonth();\r\n//             let year = svr.getConfigYear();\r\n//\r\n//\r\n//             let fileName = 'smkt-P2-' + year + '-' + month + '-工作進度表.xls';\r\n//\r\n//             saveAs(blob, fileName);\r\n//\r\n//             let msg = 'report : ' + fileName + ', outlets: # ' + statuses.length;\r\n//             this.svr.doLogServerMsg(msg);\r\n//\r\n//         }\r\n//\r\n//         //The international default letter size is ISO 216 A4 (210x297mm ~ 8.3×11.7in) and expressed as this:\r\n//         // // pageSize: with and height in 20th of a point\r\n//         // <w:pgSz w:w=\"11906\" w:h=\"16838\"/>\r\n//\r\n//         // https://docx.js.org/#/examples\r\n//         makeDoc(svr: DbService, ts: Template[], month: number, numSelected = 0): void {\r\n//\r\n//\r\n//             ts = ts || svr.getTemplateOfOutlet('0051102');\r\n//\r\n//\r\n//             ts = ts.filter(t => {\r\n//\r\n//                 if (numSelected > 0) {\r\n//                     return t._isSelected\r\n//                 } else {\r\n//                     return t.isEnabled(month) && t.isActive();\r\n//                 }\r\n//             });\r\n//\r\n//             if (!(ts && ts.length)) {\r\n//                 alert(' nothing to print for month : ' + month);\r\n//                 return;\r\n//             }\r\n//\r\n//             let t = ts[0];\r\n//             let outlet = svr.mgr.getOutlet(t.OutletCode);\r\n//             let item = svr.mgr.getItem(t.ItemCode);\r\n//\r\n//             let fn = '紙板-' + month + '月-' + t.OutletCode + '.docx';\r\n//\r\n//\r\n//             let newLineTabs = function (numTab: number, msg = '') {\r\n//                 let tab = msg + '\\t';\r\n//                 for (let i = 0; i < numTab; i++) {\r\n//                     if (i > 10) {\r\n//                         continue\r\n//                     }\r\n//                     tab += '\\t';\r\n//                 }\r\n//                 return new TextRun(tab).break()\r\n//             };\r\n//\r\n//\r\n//             let newPara = function () {\r\n//                 return new Paragraph().style('myStyle')\r\n//             };\r\n//\r\n//\r\n//             // @ts-ignore\r\n//             const doc = new Document(undefined, {\r\n//                 top: 100,\r\n//                 right: 1000,\r\n//                 bottom: 100,\r\n//                 left: 1000,\r\n//                 title: 'My Doc'\r\n//             });\r\n//\r\n//             // @ts-ignore\r\n//             doc.Styles.createParagraphStyle(\"myStyle\", \"My Style\")\r\n//                 .quickFormat()\r\n//                 .basedOn(\"Normal\").size(12 * 2);\r\n//\r\n//             let makeOneItemDescription = function (p: any, name: string, idx): number {\r\n//\r\n//                 name = name || '';\r\n//                 if (Helper.isBlank(name)) {\r\n//                     return 0;\r\n//                 }\r\n//                 let lineExt = 0;\r\n//                 let lines = name.split('\\n');\r\n//                 for (let line of lines) {\r\n//                     line = line.trim();\r\n//                     p.addRun(new TextRun('   ' + line).break());\r\n//\r\n//                     lineExt += Math.floor(line.length / 25);\r\n//                     // lineExt++;\r\n//\r\n//                 }\r\n//\r\n//                 // if(lines.length <= 6 && idx <= 2) {\r\n//                 //   p.addRun(new TextRun('').break());\r\n//                 // }\r\n//\r\n//                 console.info('len: ' + lines.length + ', extra: ' + lineExt + ' : ' + name);\r\n//\r\n//                 return lines.length + lineExt;\r\n//                 // return lines.length + 1;\r\n//             };\r\n//\r\n//             let makeOneRow = function (table: any, t: Template, rowNum: number, numLineSoFar: number): number {\r\n//                 let colIdx = 0;\r\n//                 let rowIdx = ((rowNum - 1) % 4) + 1;\r\n//\r\n//\r\n//                 let outlet = svr.mgr.getOutlet(t.OutletCode);\r\n//                 let item = svr.mgr.getItem(t.ItemCode);\r\n//\r\n//\r\n//                 // console.info('row: ' + rowNum + ', soFar: ' + numLineSoFar);\r\n//\r\n//\r\n//                 table.getCell(rowNum, colIdx++)\r\n//                     .addContent(newPara().addRun(new TextRun(' ' + item.ItemCode + ' ').bold()).center()\r\n//                         .addRun(newLineTabs(2)));\r\n//\r\n//                 let p = newPara().addRun(new TextRun('' + item.Name).bold()).addRun(new TextRun(' '));\r\n//\r\n//                 const tlets = t.getTasklets();\r\n//                 let itemLines = 0;\r\n//                 const MIN_LINES = 7;\r\n//\r\n//\r\n//                 for (let i = 0; i < tlets.length; i++) {\r\n//                     itemLines += makeOneItemDescription(p, tlets[i] ? tlets[i].Name : '', rowIdx);\r\n//\r\n//                 }\r\n//\r\n//                 numLineSoFar += itemLines;\r\n//\r\n//                 // padding remaining lines;\r\n//                 for (let i = itemLines; i < MIN_LINES; i++) {\r\n//                     // check if it's too long already\r\n//                     //if (numLineSoFar < (rowIdx * MIN_LINES) && !(numLineSoFar >= (4 * MIN_LINES - 1))) {\r\n//                     if (numLineSoFar <= (rowIdx * MIN_LINES)) {\r\n//                         p.addRun(new TextRun('').break());\r\n//                         console.info(' rowNum: ' + rowNum + ', rowIdx: ' + rowIdx + ', soFar: ' + numLineSoFar);\r\n//                         numLineSoFar++;\r\n//                     } else {\r\n//                         console.info('skipped blank line, rowNum: ' + rowNum + ', rowIdx: ' + rowIdx + ', soFar: ' + numLineSoFar);\r\n//                         break;\r\n//                     }\r\n//                 }\r\n//\r\n//                 let baseQty = t.BaseQty;\r\n//                 let unit = svr.unitTypeMgr.get(t.BaseUnit);\r\n//\r\n//                 if (tlets && tlets[0]) {\r\n//                     let tlet = tlets[0];\r\n//                     baseQty = tlet.Qty;\r\n//                     unit = svr.unitTypeMgr.get(tlet.Unit);\r\n//                 }\r\n//\r\n//\r\n//                 table.getCell(rowNum, colIdx++).addContent(p);\r\n//                 table.getCell(rowNum, colIdx++).addContent(newPara().addRun(new TextRun(baseQty).break()).center().addRun(newLineTabs(0)));\r\n//                 table.getCell(rowNum, colIdx++).addContent(newPara().addRun(new TextRun(unit.Name).break()).center()\r\n//                     .addRun(new TextRun(unit.Code).break()).center().addRun(newLineTabs(0)));\r\n//\r\n//                 //table.getCell(rowNum, colIdx++).addContent(newPara().addRun(new TextRun(' ').tab()));\r\n//                 table.getCell(rowNum, colIdx++).addContent(newPara().addRun(newLineTabs(2, ''))); // price space\r\n//                 return numLineSoFar;\r\n//             };\r\n//\r\n//             let makeOnePage = function (doc, o: Outlet, ts: Template[]) {\r\n//\r\n//                 // @ts-ignore\r\n//                 let p = doc.createParagraph().style('myStyle');\r\n//                 p.addImage(Media.addImage(doc, header_image, 1350 / 2, 194 / 2));\r\n//\r\n//                 let d = svr.config.getPaperReportDate();\r\n//                 let timeInfo = d.getFullYear() + '-' + (d.getMonth() + 1);\r\n//\r\n//                 let l1 = \"商戶編號 \\t: \" + CvsHelper.dash(outlet.OutletCode, 4) + '\\t\\t\\t\\t\\t\\t\\t\\t\\t  期間 : ' + timeInfo;\r\n//                 let l2 = '商戶名稱 \\t: ' + outlet.Name;\r\n//                 let l3 = '地址 \\t\\t: ' + outlet.Address;\r\n//                 let l4 = '聯絡人　　\\t: ' + (outlet.Contact || '') + ' Tel:' + outlet.Tel;\r\n//\r\n//                 p.addRun(new TextRun(l1));\r\n//                 p.addRun(new TextRun(l2).break());\r\n//                 p.addRun(new TextRun(l3).break());\r\n//                 p.addRun(new TextRun(l4).break());\r\n//                 p.addRun(new TextRun('').break());\r\n//\r\n//                 // @ts-ignore\r\n//                 let table = doc.createTable(1 + ts.length, 5);\r\n//                 table.setWidth(4535);\r\n//\r\n//\r\n//                 let colIdx = 0;\r\n//                 let cell0 = table.getCell(0, colIdx++);\r\n//                 let cell1 = table.getCell(0, colIdx++);\r\n//                 let cell2 = table.getCell(0, colIdx++);\r\n//                 let cell3 = table.getCell(0, colIdx++);\r\n//                 let cell4 = table.getCell(0, colIdx++);\r\n//\r\n//                 cell0.addContent(newPara().addRun(new TextRun('商品編號').bold()).addRun(newLineTabs(1)).center());\r\n//                 cell1.addContent(newPara().addRun(new TextRun('商品名稱及說明').bold()).addRun(newLineTabs(1)).center());\r\n//                 cell2.addContent(newPara().addRun(new TextRun('數量').bold()).center());\r\n//                 cell3.addContent(newPara().addRun(new TextRun('單位').bold()).center());\r\n//                 cell4.addContent(newPara().addRun(new TextRun('價格 (澳門元)').bold()).center());\r\n//\r\n//\r\n//                 cell0.properties.setWidth(\"14%\", WidthType.PCT);\r\n//                 cell1.properties.setWidth(\"52%\", WidthType.PCT);\r\n//                 cell2.properties.setWidth(\"8%\", WidthType.PCT);\r\n//                 cell3.properties.setWidth(\"8%\", WidthType.PCT);\r\n//                 cell4.properties.setWidth(\"18%\", WidthType.PCT);\r\n//                 // cell0.\r\n//\r\n//\r\n//                 let rowIdx = 1;\r\n//                 let lineTotalSoFar: number = 0;\r\n//                 let count = 0;\r\n//                 for (const t of ts) {\r\n//                     lineTotalSoFar = makeOneRow(table, t, rowIdx++, lineTotalSoFar);\r\n//                 }\r\n//             };\r\n//\r\n//             let idx = 0;\r\n//             let tmp = [];\r\n//             for (let i = 0; i < ts.length; i++) {\r\n//\r\n//                 tmp.push(ts[i]);\r\n//                 idx++;\r\n//                 let isLast = (i + 1 == ts.length);\r\n//                 if (idx == 4 || isLast) {\r\n//\r\n//                     makeOnePage(doc, outlet, tmp);\r\n//\r\n//                     if (!isLast) {\r\n//                         doc.createParagraph().pageBreak();\r\n//                     }\r\n//\r\n//                     tmp = [];\r\n//                     idx = 0;\r\n//                 }\r\n//             }\r\n//\r\n//\r\n//             //let p4 = doc.Footer.createParagraph().style('myStyle');\r\n//             let p4 = doc.Footer.createParagraph().style('myStyle');\r\n//             p4.addRun(new TextRun(\"備註： \\t\\t 1 – 暫時缺貨 \\t\\t 2 – 季節性缺貨 \\t\\t 3 – 長期缺貨 \\t\\t 4 – 其他原因\").size(18));\r\n//             p4.addRun(new TextRun(\"調查日期 __________________ \\t\\t 調查員 ____________________ \\t\\t 編號 ________ \").break().break());\r\n//             p4.addRun(new TextRun(\"統計暨普查局 – 0416.b      \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t A4 – 2020/12\").break().size(18));\r\n//\r\n//\r\n//             const packer = new Packer();\r\n//\r\n//             packer.toBlob(doc).then(blob => {\r\n//                 saveAs(blob, fn);\r\n//                 console.log(\"Document created successfully\");\r\n//\r\n//                 let msg = 'paper : ' + fn + ' | ' + outlet.Name;\r\n//                 this.svr.doLogServerMsg(msg);\r\n//\r\n//             });\r\n//         }\r\n//     }\r\n// }\r\n//\r\n"]}